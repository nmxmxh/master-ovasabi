{
  "version": "1.0.0",
  "last_updated": "2023-10-19T12:00:00Z",
  "system_components": {
    "service_platform": {
      "core_services": ["user", "finance", "asset", "marketplace", "notification", "referral", "campaign", "quotes"],
      "infrastructure": ["nexus", "patterns", "database", "redis", "tracing", "metrics"],
      "interfaces": ["api_gateway", "grpc_services", "event_bus"]
    },
    "token_ecosystem": {
      "tokens": ["OvaStable", "OvaUtility"],
      "components": ["exchange_orchestration", "wallet_gateway", "token_governance", "treasury"],
      "mechanisms": ["currency_basket", "UBI_distribution", "staking", "governance"]
    },
    "integration_layer": {
      "services": ["exchange_orchestration", "wallet_gateway", "incentive_management", "reputation_bridge", "value_router"],
      "patterns": ["identity_unification", "value_exchange", "data_intelligence"],
      "interfaces": ["nexus_integration", "pattern_registry", "event_streams"]
    }
  },
  "repository_structure": {
    "root_directories": {
      "api": {
        "purpose": "API definitions and contracts",
        "key_components": ["protos"],
        "relationship_to_services": "defines service interfaces",
        "subdirectories": {
          "protos": {
            "purpose": "Protocol buffer definitions",
            "service_mapping": {
              "asset": "asset management services",
              "auth": "authentication services",
              "broadcast": "messaging and notification",
              "campaign": "marketing campaigns",
              "finance": "financial operations",
              "i18n": "internationalization",
              "notification": "user notifications",
              "quotes": "price quotes and estimation",
              "referral": "referral program",
              "user": "user management"
            }
          }
        }
      },
      "cmd": {
        "purpose": "Application entry points",
        "key_components": ["server"],
        "relationship_to_services": "service initialization and configuration"
      },
      "config": {
        "purpose": "Configuration files",
        "relationship_to_services": "service configuration",
        "affects": ["service_behavior", "environment_settings"]
      },
      "database": {
        "purpose": "Database related files",
        "key_components": ["migrations"],
        "relationship_to_services": "data persistence layer"
      },
      "docs": {
        "purpose": "Documentation",
        "key_components": ["api", "architecture", "deployment", "development"],
        "knowledge_base": "patterns, services, integrations",
        "relationship_to_services": "documents service design and usage"
      },
      "internal": {
        "purpose": "Private application code",
        "key_components": ["nexus", "repository", "server", "service", "shared"],
        "relationship_to_services": "service implementations",
        "nexus_location": "internal/nexus",
        "services_location": "internal/service"
      },
      "pkg": {
        "purpose": "Public packages",
        "key_components": ["di", "errors", "logger", "metrics", "models", "redis", "tracing"],
        "relationship_to_services": "reusable components across services"
      },
      "tools": {
        "purpose": "Development tools",
        "key_components": ["codegen", "docgen", "lint", "protoc"],
        "relationship_to_services": "service development support"
      },
      "amadeus": {
        "purpose": "System knowledge persistence",
        "key_components": ["system_knowledge_graph"],
        "relationship_to_services": "meta-documentation of system relationships"
      }
    }
  },
  "services": {
    "core_services": {
      "user_service": {
        "purpose": "Manages user identity, profiles, and authentication",
        "location": "internal/service/user",
        "repositories": ["user_repository"],
        "patterns_used": ["identity_unification_pattern"],
        "integration_points": ["auth_service", "referral_service", "notification_service"],
        "token_integration": "wallet association, governance participation"
      },
      "finance_service": {
        "purpose": "Handles financial transactions, wallets, and payment processing",
        "location": "internal/service/finance",
        "repositories": ["transaction_repository", "wallet_repository", "payment_repository"],
        "patterns_used": ["value_exchange_pattern"],
        "integration_points": ["user_service", "exchange_orchestration_service"],
        "token_integration": "token transactions, fiat-token exchange"
      },
      "asset_service": {
        "purpose": "Manages digital assets, documents, and multimedia content",
        "location": "internal/service/asset",
        "repositories": ["asset_repository"],
        "patterns_used": ["content_management_pattern"],
        "integration_points": ["user_service", "marketplace_service"],
        "token_integration": "asset tokenization, NFT capabilities"
      }
    },
    "token_services": {
      "token_service": {
        "purpose": "Manages token issuance, transfers, and balances",
        "location": "internal/service/token",
        "repositories": ["token_repository", "balance_repository"],
        "patterns_used": ["token_lifecycle_pattern"],
        "integration_points": ["finance_service", "exchange_orchestration_service"],
        "service_integration": "service rewards, premium features"
      }
    }
  },
  "nexus": {
    "core_components": {
      "pattern_registry": {
        "purpose": "Stores and manages all system patterns",
        "location": "internal/nexus/service/pattern",
        "interfaces": ["RegisterPattern", "FindPattern", "ExecutePattern"],
        "storage": "database with redis cache",
        "relationship_to_services": "provides patterns for service composition"
      }
    }
  },
  "patterns": {
    "core_patterns": {
      "identity_unification_pattern": {
        "purpose": "Creates unified identity spanning service and token domains",
        "location": "internal/nexus/patterns/identity",
        "services_used": ["user_service", "auth_service", "wallet_gateway_service"],
        "integration_points": ["user_profile", "wallet_address", "authentication"],
        "composition_potential": "High - foundation for many other patterns"
      }
    }
  },
  "database_practices": {
    "architecture": {
      "primary_database": {
        "technology": "PostgreSQL",
        "purpose": "Primary persistent storage",
        "location": "database/",
        "migration_strategy": "Up/down versioned migrations",
        "relationship_to_services": "All services use for persistent storage"
      }
    }
  },
  "redis_practices": {
    "architecture": {
      "deployment_model": {
        "primary": "Redis Cluster for high availability",
        "purpose": "Caching, session management, real-time features",
        "configuration_location": "redis.conf",
        "relationship_to_services": "Used by all services for performance optimization"
      }
    }
  },
  "amadeus_integration": {
    "purpose": "Knowledge persistence and system evolution tracking",
    "integration_points": {
      "nexus_integration": {
        "pattern": "knowledge_graph_pattern",
        "purpose": "Maintain system knowledge graph alongside patterns",
        "implementation": "Nexus pattern that updates knowledge graph on system changes"
      },
      "service_integration": {
        "integration_services": ["all_services"],
        "purpose": "Capture service interaction knowledge",
        "implementation": "Service event hooks that update knowledge graph"
      }
    },
    "knowledge_management": {
      "versioning": "Git-based version history of knowledge graph",
      "real_time_updates": "Event-driven updates from system activities",
      "visualization": "Dynamic generation of system visualization from graph data"
    }
  }
} 