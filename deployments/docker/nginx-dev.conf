# Development nginx.conf for WASM + WebSocket AI microservice
# - Proxies frontend to Vite dev server (localhost:5173)
# - Proxies HMR WebSocket to Vite dev server (localhost:5174)
# - Proxies /ws to AI microservice (load balanced)
# - Proxies /api to backend API
# - Gzip compression, caching, security headers

worker_processes 1;

# Events block
events { worker_connections 1024; }

http {
    log_format main_json '{"time":"$time_iso8601","remote_addr":"$remote_addr","x_forwarded_for":"$proxy_add_x_forwarded_for","request_method":"$request_method","request_uri":"$request_uri","status":$status,"body_bytes_sent":$body_bytes_sent,"request_time":$request_time,"upstream_response_time":"$upstream_response_time","http_referer":"$http_referer","http_user_agent":"$http_user_agent","request_id":"$request_id"}';
    access_log  /var/log/nginx/access.log  main_json;
    include       mime.types;
    default_type  application/octet-stream;
    # Explicit MIME type for WASM files
    types {
        application/wasm wasm;
    }
    sendfile        on;
    keepalive_timeout  65;

    # Gzip compression for static and WASM assets
    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript application/wasm;
    gzip_min_length 256;
    gzip_comp_level 6;

    # Rate limiting (tune as needed)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Upstream for Vite dev server (frontend development)
    upstream vite_dev {
        server host.docker.internal:5173;
    }

    # Upstream for Vite HMR WebSocket (development)
    upstream vite_hmr {
        server host.docker.internal:5174;
    }

    # Upstream for central WebSocket gateway (ws-gateway:8090)
    upstream ws_gateway {
        server ws-gateway:8090;
    }
    # Upstream for backend API (app:8080)
    upstream app_api {
        server app:8080;
    }

    # HTTP server
    server {
        listen 80;
        server_name _;

        # Security headers (relaxed for development)
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # Required for WASM threads (SharedArrayBuffer/crossOriginIsolated)
        # Note: These headers are handled by Vite dev server in development
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Embedder-Policy "require-corp" always;

        # Rate limiting (tune as needed)
        limit_req zone=api_limit burst=20 nodelay;

        # Proxy all frontend requests to Vite dev server
        location / {
            proxy_pass http://vite_dev;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Vite HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Disable buffering for real-time updates
            proxy_buffering off;
            proxy_cache off;
        }

        # Proxy Vite HMR WebSocket to dev server (port 5174)
        location /__vite_ping {
            proxy_pass http://vite_hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy Vite HMR WebSocket to dev server (port 5174)
        location /__vite_hmr {
            proxy_pass http://vite_hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy WebSocket requests to central ws-gateway
        location /ws {
            proxy_pass http://ws_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_buffering off;
        }

        # Proxy API requests to backend
        location /api {
            proxy_pass http://app_api;
            proxy_set_header Host $host;
            limit_req zone=api_limit;
        }
    }
}

