# Dockerfile for OVASABI AI Python service
# Use a specific, up-to-date slim image
FROM python:3.11.9-slim-bookworm AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential \
  libpq-dev \
  protobuf-compiler


# Install Python dependencies (cache layer)
COPY internal/ai/python/requirements.txt ./
RUN pip install --upgrade pip && \
  pip install --no-cache-dir --upgrade setuptools wheel && \
  pip install --no-cache-dir -r requirements.txt

# Install WASM runtime for local execution (wasmtime)
RUN pip install --no-cache-dir wasmtime

# Install grpcio-tools for proto generation
RUN pip install --no-cache-dir grpcio-tools

# Copy proto files and generate Python stubs
COPY api/protos /app/api/protos

# Ensure output directory for generated protos exists
RUN mkdir -p /app/internal/ai/python/protos

RUN python -m grpc_tools.protoc \
  -I/app/api/protos \
  --python_out=/app/internal/ai/python/protos \
  --grpc_python_out=/app/internal/ai/python/protos \
  $(find /app/api/protos -name '*.proto')

# Copy Python source code (after deps for cache efficiency)
COPY internal/ai/python ./internal/ai/python

# Download GGUF model if not present (build step)
RUN pip install --no-cache-dir 'huggingface_hub[cli]' && \
  mkdir -p /app/internal/ai/python/models && \
  if [ ! -f /app/internal/ai/python/models/phi-4-mini-q4_k_s.gguf ]; then \
  huggingface-cli download Mungert/Phi-4-mini-instruct.gguf \
  --include "phi-4-mini-q4_k_s.gguf" --local-dir /app/internal/ai/python/models; \
  fi

# --- Final runtime image ---
FROM python:3.11.9-slim-bookworm

WORKDIR /app

# Install only runtime dependencies (use libpq5 instead of libpq-dev for smaller surface)
RUN apt-get update && apt-get install -y --no-install-recommends libpq5 && rm -rf /var/lib/apt/lists/*

# Copy installed Python packages and built code from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /app/internal/ai/python /app/internal/ai/python

ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app/internal:/app/internal/ai:/app/internal/ai/python

RUN useradd -m ai && chown -R ai /app
USER ai

CMD ["python", "-m", "python.main"]
