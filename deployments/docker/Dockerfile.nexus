# ----------- Build Stage -----------
FROM golang:1.24-alpine AS builder

WORKDIR /nexus

COPY go.mod go.sum ./
RUN --mount=type=cache,target=/go/pkg/mod go mod download

COPY . .
# Log and fail if service_registration.json is missing before COPY
RUN if [ ! -f config/service_registration.json ]; then \
  echo "[DOCKER] ERROR: config/service_registration.json is missing! Docker will create a directory if this file is absent."; \
  exit 1; \
  fi
# Copy service_registration.json for embedding or runtime
COPY config/service_registration.json ./config/service_registration.json

# Build the Nexus binary
RUN --mount=type=cache,target=/go/pkg/mod CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -o /nexus/nexus ./cmd/nexus

# ----------- Final Stage (Distroless) -----------
FROM gcr.io/distroless/base-debian11

WORKDIR /nexus

COPY --from=builder /nexus/nexus .
COPY --from=builder /nexus/config/service_registration.json /nexus/config/service_registration.json

USER nonroot:nonroot

EXPOSE 50052 9090

ENTRYPOINT ["/nexus/nexus"]