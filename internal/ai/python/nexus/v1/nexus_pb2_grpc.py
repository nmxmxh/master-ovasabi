# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nexus.v1 import nexus_pb2 as nexus_dot_v1_dot_nexus__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in nexus/v1/nexus_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NexusServiceStub(object):
    """NexusService: High-level composer, orchestrator, and pattern identifier
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterPattern = channel.unary_unary(
                '/nexus.v1.NexusService/RegisterPattern',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.RegisterPatternRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.RegisterPatternResponse.FromString,
                _registered_method=True)
        self.ListPatterns = channel.unary_unary(
                '/nexus.v1.NexusService/ListPatterns',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.ListPatternsRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.ListPatternsResponse.FromString,
                _registered_method=True)
        self.Orchestrate = channel.unary_unary(
                '/nexus.v1.NexusService/Orchestrate',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.OrchestrateRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.OrchestrateResponse.FromString,
                _registered_method=True)
        self.TracePattern = channel.unary_unary(
                '/nexus.v1.NexusService/TracePattern',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.TracePatternRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.TracePatternResponse.FromString,
                _registered_method=True)
        self.MinePatterns = channel.unary_unary(
                '/nexus.v1.NexusService/MinePatterns',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.MinePatternsRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.MinePatternsResponse.FromString,
                _registered_method=True)
        self.Feedback = channel.unary_unary(
                '/nexus.v1.NexusService/Feedback',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.FeedbackRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.FeedbackResponse.FromString,
                _registered_method=True)
        self.HandleOps = channel.unary_unary(
                '/nexus.v1.NexusService/HandleOps',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.HandleOpsRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.HandleOpsResponse.FromString,
                _registered_method=True)
        self.EmitEvent = channel.unary_unary(
                '/nexus.v1.NexusService/EmitEvent',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.EventRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.EventResponse.FromString,
                _registered_method=True)
        self.SubscribeEvents = channel.unary_stream(
                '/nexus.v1.NexusService/SubscribeEvents',
                request_serializer=nexus_dot_v1_dot_nexus__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=nexus_dot_v1_dot_nexus__pb2.EventResponse.FromString,
                _registered_method=True)


class NexusServiceServicer(object):
    """NexusService: High-level composer, orchestrator, and pattern identifier
    """

    def RegisterPattern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPatterns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Orchestrate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TracePattern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MinePatterns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Feedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleOps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmitEvent(self, request, context):
        """--- Event Bus Methods ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NexusServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterPattern': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPattern,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.RegisterPatternRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.RegisterPatternResponse.SerializeToString,
            ),
            'ListPatterns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPatterns,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.ListPatternsRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.ListPatternsResponse.SerializeToString,
            ),
            'Orchestrate': grpc.unary_unary_rpc_method_handler(
                    servicer.Orchestrate,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.OrchestrateRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.OrchestrateResponse.SerializeToString,
            ),
            'TracePattern': grpc.unary_unary_rpc_method_handler(
                    servicer.TracePattern,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.TracePatternRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.TracePatternResponse.SerializeToString,
            ),
            'MinePatterns': grpc.unary_unary_rpc_method_handler(
                    servicer.MinePatterns,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.MinePatternsRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.MinePatternsResponse.SerializeToString,
            ),
            'Feedback': grpc.unary_unary_rpc_method_handler(
                    servicer.Feedback,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.FeedbackRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.FeedbackResponse.SerializeToString,
            ),
            'HandleOps': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleOps,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.HandleOpsRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.HandleOpsResponse.SerializeToString,
            ),
            'EmitEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.EmitEvent,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.EventRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.EventResponse.SerializeToString,
            ),
            'SubscribeEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeEvents,
                    request_deserializer=nexus_dot_v1_dot_nexus__pb2.SubscribeRequest.FromString,
                    response_serializer=nexus_dot_v1_dot_nexus__pb2.EventResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nexus.v1.NexusService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nexus.v1.NexusService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NexusService(object):
    """NexusService: High-level composer, orchestrator, and pattern identifier
    """

    @staticmethod
    def RegisterPattern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/RegisterPattern',
            nexus_dot_v1_dot_nexus__pb2.RegisterPatternRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.RegisterPatternResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPatterns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/ListPatterns',
            nexus_dot_v1_dot_nexus__pb2.ListPatternsRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.ListPatternsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Orchestrate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/Orchestrate',
            nexus_dot_v1_dot_nexus__pb2.OrchestrateRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.OrchestrateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TracePattern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/TracePattern',
            nexus_dot_v1_dot_nexus__pb2.TracePatternRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.TracePatternResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MinePatterns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/MinePatterns',
            nexus_dot_v1_dot_nexus__pb2.MinePatternsRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.MinePatternsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Feedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/Feedback',
            nexus_dot_v1_dot_nexus__pb2.FeedbackRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.FeedbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HandleOps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/HandleOps',
            nexus_dot_v1_dot_nexus__pb2.HandleOpsRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.HandleOpsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EmitEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nexus.v1.NexusService/EmitEvent',
            nexus_dot_v1_dot_nexus__pb2.EventRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.EventResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/nexus.v1.NexusService/SubscribeEvents',
            nexus_dot_v1_dot_nexus__pb2.SubscribeRequest.SerializeToString,
            nexus_dot_v1_dot_nexus__pb2.EventResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
