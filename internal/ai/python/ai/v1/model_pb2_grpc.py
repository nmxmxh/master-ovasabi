# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from ai.v1 import model_pb2 as ai_dot_v1_dot_model__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in ai/v1/model_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AIServiceStub(object):
    """--- Service Definitions ---
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessContent = channel.stream_unary(
                '/ai.v1.AIService/ProcessContent',
                request_serializer=ai_dot_v1_dot_model__pb2.EnrichmentRequest.SerializeToString,
                response_deserializer=ai_dot_v1_dot_model__pb2.EnrichmentResponse.FromString,
                _registered_method=True)
        self.GenerateEmbeddings = channel.unary_unary(
                '/ai.v1.AIService/GenerateEmbeddings',
                request_serializer=ai_dot_v1_dot_model__pb2.EnrichmentRequest.SerializeToString,
                response_deserializer=ai_dot_v1_dot_model__pb2.EnrichmentResponse.Vector.FromString,
                _registered_method=True)
        self.SubmitModelUpdate = channel.unary_unary(
                '/ai.v1.AIService/SubmitModelUpdate',
                request_serializer=ai_dot_v1_dot_model__pb2.ModelUpdate.SerializeToString,
                response_deserializer=ai_dot_v1_dot_model__pb2.ModelUpdateAck.FromString,
                _registered_method=True)
        self.GetCurrentModel = channel.unary_unary(
                '/ai.v1.AIService/GetCurrentModel',
                request_serializer=ai_dot_v1_dot_model__pb2.ModelRequest.SerializeToString,
                response_deserializer=ai_dot_v1_dot_model__pb2.Model.FromString,
                _registered_method=True)
        self.HandleClientEvent = channel.unary_unary(
                '/ai.v1.AIService/HandleClientEvent',
                request_serializer=ai_dot_v1_dot_model__pb2.ClientEvent.SerializeToString,
                response_deserializer=ai_dot_v1_dot_model__pb2.ClientEventAck.FromString,
                _registered_method=True)


class AIServiceServicer(object):
    """--- Service Definitions ---
    """

    def ProcessContent(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateEmbeddings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitModelUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleClientEvent(self, request, context):
        """New client feedback endpoint
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AIServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessContent': grpc.stream_unary_rpc_method_handler(
                    servicer.ProcessContent,
                    request_deserializer=ai_dot_v1_dot_model__pb2.EnrichmentRequest.FromString,
                    response_serializer=ai_dot_v1_dot_model__pb2.EnrichmentResponse.SerializeToString,
            ),
            'GenerateEmbeddings': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateEmbeddings,
                    request_deserializer=ai_dot_v1_dot_model__pb2.EnrichmentRequest.FromString,
                    response_serializer=ai_dot_v1_dot_model__pb2.EnrichmentResponse.Vector.SerializeToString,
            ),
            'SubmitModelUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitModelUpdate,
                    request_deserializer=ai_dot_v1_dot_model__pb2.ModelUpdate.FromString,
                    response_serializer=ai_dot_v1_dot_model__pb2.ModelUpdateAck.SerializeToString,
            ),
            'GetCurrentModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentModel,
                    request_deserializer=ai_dot_v1_dot_model__pb2.ModelRequest.FromString,
                    response_serializer=ai_dot_v1_dot_model__pb2.Model.SerializeToString,
            ),
            'HandleClientEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleClientEvent,
                    request_deserializer=ai_dot_v1_dot_model__pb2.ClientEvent.FromString,
                    response_serializer=ai_dot_v1_dot_model__pb2.ClientEventAck.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ai.v1.AIService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ai.v1.AIService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AIService(object):
    """--- Service Definitions ---
    """

    @staticmethod
    def ProcessContent(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/ai.v1.AIService/ProcessContent',
            ai_dot_v1_dot_model__pb2.EnrichmentRequest.SerializeToString,
            ai_dot_v1_dot_model__pb2.EnrichmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateEmbeddings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ai.v1.AIService/GenerateEmbeddings',
            ai_dot_v1_dot_model__pb2.EnrichmentRequest.SerializeToString,
            ai_dot_v1_dot_model__pb2.EnrichmentResponse.Vector.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubmitModelUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ai.v1.AIService/SubmitModelUpdate',
            ai_dot_v1_dot_model__pb2.ModelUpdate.SerializeToString,
            ai_dot_v1_dot_model__pb2.ModelUpdateAck.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ai.v1.AIService/GetCurrentModel',
            ai_dot_v1_dot_model__pb2.ModelRequest.SerializeToString,
            ai_dot_v1_dot_model__pb2.Model.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HandleClientEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ai.v1.AIService/HandleClientEvent',
            ai_dot_v1_dot_model__pb2.ClientEvent.SerializeToString,
            ai_dot_v1_dot_model__pb2.ClientEventAck.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
