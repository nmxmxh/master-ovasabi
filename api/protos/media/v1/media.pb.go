// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: media/v1/media.proto

package mediav1

import (
	v1 "github.com/nmxmxh/master-ovasabi/api/protos/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Media types
type MediaType int32

const (
	MediaType_MEDIA_TYPE_UNSPECIFIED MediaType = 0
	MediaType_MEDIA_TYPE_LIGHT       MediaType = 1 // < 500KB, stored in DB
	MediaType_MEDIA_TYPE_HEAVY       MediaType = 2 // >= 500KB, stored externally
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_UNSPECIFIED",
		1: "MEDIA_TYPE_LIGHT",
		2: "MEDIA_TYPE_HEAVY",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_UNSPECIFIED": 0,
		"MEDIA_TYPE_LIGHT":       1,
		"MEDIA_TYPE_HEAVY":       2,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_media_v1_media_proto_enumTypes[0].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_media_v1_media_proto_enumTypes[0]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{0}
}

// Media represents a media file and its metadata
type Media struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MasterId      int64                  `protobuf:"varint,2,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	MasterUuid    string                 `protobuf:"bytes,15,opt,name=master_uuid,json=masterUuid,proto3" json:"master_uuid,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          MediaType              `protobuf:"varint,4,opt,name=type,proto3,enum=media.v1.MediaType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	MimeType      string                 `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size          int64                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Data          []byte                 `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Url           string                 `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	IsSystem      bool                   `protobuf:"varint,10,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Metadata      *v1.Metadata           `protobuf:"bytes,14,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_media_v1_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{0}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *Media) GetMasterUuid() string {
	if x != nil {
		return x.MasterUuid
	}
	return ""
}

func (x *Media) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Media) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *Media) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Media) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Media) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Media) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Media) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Media) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *Media) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Media) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Media) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Media) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request to upload a light media
type UploadLightMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Metadata      *v1.Metadata           `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadLightMediaRequest) Reset() {
	*x = UploadLightMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadLightMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLightMediaRequest) ProtoMessage() {}

func (x *UploadLightMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLightMediaRequest.ProtoReflect.Descriptor instead.
func (*UploadLightMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{1}
}

func (x *UploadLightMediaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UploadLightMediaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadLightMediaRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UploadLightMediaRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadLightMediaRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadLightMediaRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response for uploading a light media
type UploadLightMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadLightMediaResponse) Reset() {
	*x = UploadLightMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadLightMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLightMediaResponse) ProtoMessage() {}

func (x *UploadLightMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLightMediaResponse.ProtoReflect.Descriptor instead.
func (*UploadLightMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{2}
}

func (x *UploadLightMediaResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *UploadLightMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UploadLightMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to start a heavy media upload
type StartHeavyMediaUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Metadata      *v1.Metadata           `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartHeavyMediaUploadRequest) Reset() {
	*x = StartHeavyMediaUploadRequest{}
	mi := &file_media_v1_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHeavyMediaUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHeavyMediaUploadRequest) ProtoMessage() {}

func (x *StartHeavyMediaUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHeavyMediaUploadRequest.ProtoReflect.Descriptor instead.
func (*StartHeavyMediaUploadRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{3}
}

func (x *StartHeavyMediaUploadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StartHeavyMediaUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartHeavyMediaUploadRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *StartHeavyMediaUploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StartHeavyMediaUploadRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Response for starting a heavy media upload
type StartHeavyMediaUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	ChunkSize     int32                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	ChunksTotal   int32                  `protobuf:"varint,3,opt,name=chunks_total,json=chunksTotal,proto3" json:"chunks_total,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartHeavyMediaUploadResponse) Reset() {
	*x = StartHeavyMediaUploadResponse{}
	mi := &file_media_v1_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHeavyMediaUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHeavyMediaUploadResponse) ProtoMessage() {}

func (x *StartHeavyMediaUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHeavyMediaUploadResponse.ProtoReflect.Descriptor instead.
func (*StartHeavyMediaUploadResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{4}
}

func (x *StartHeavyMediaUploadResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *StartHeavyMediaUploadResponse) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *StartHeavyMediaUploadResponse) GetChunksTotal() int32 {
	if x != nil {
		return x.ChunksTotal
	}
	return 0
}

func (x *StartHeavyMediaUploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StartHeavyMediaUploadResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Chunk of media data for streaming
type MediaChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Sequence      uint32                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaChunk) Reset() {
	*x = MediaChunk{}
	mi := &file_media_v1_media_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaChunk) ProtoMessage() {}

func (x *MediaChunk) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaChunk.ProtoReflect.Descriptor instead.
func (*MediaChunk) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{5}
}

func (x *MediaChunk) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *MediaChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MediaChunk) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MediaChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

// Request to stream media chunks
type StreamMediaChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Chunk         *MediaChunk            `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMediaChunkRequest) Reset() {
	*x = StreamMediaChunkRequest{}
	mi := &file_media_v1_media_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMediaChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMediaChunkRequest) ProtoMessage() {}

func (x *StreamMediaChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMediaChunkRequest.ProtoReflect.Descriptor instead.
func (*StreamMediaChunkRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{6}
}

func (x *StreamMediaChunkRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *StreamMediaChunkRequest) GetChunk() *MediaChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

// Response for streaming media chunks
type StreamMediaChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Sequence      uint32                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMediaChunkResponse) Reset() {
	*x = StreamMediaChunkResponse{}
	mi := &file_media_v1_media_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMediaChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMediaChunkResponse) ProtoMessage() {}

func (x *StreamMediaChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMediaChunkResponse.ProtoReflect.Descriptor instead.
func (*StreamMediaChunkResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{7}
}

func (x *StreamMediaChunkResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *StreamMediaChunkResponse) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *StreamMediaChunkResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StreamMediaChunkResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to complete an media upload
type CompleteMediaUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMediaUploadRequest) Reset() {
	*x = CompleteMediaUploadRequest{}
	mi := &file_media_v1_media_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMediaUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMediaUploadRequest) ProtoMessage() {}

func (x *CompleteMediaUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMediaUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteMediaUploadRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{8}
}

func (x *CompleteMediaUploadRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *CompleteMediaUploadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response for completing an media upload
type CompleteMediaUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMediaUploadResponse) Reset() {
	*x = CompleteMediaUploadResponse{}
	mi := &file_media_v1_media_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMediaUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMediaUploadResponse) ProtoMessage() {}

func (x *CompleteMediaUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMediaUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteMediaUploadResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{9}
}

func (x *CompleteMediaUploadResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *CompleteMediaUploadResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CompleteMediaUploadResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to get an media
type GetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{10}
}

func (x *GetMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetMediaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response for getting an media
type GetMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         *Media                 `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaResponse) Reset() {
	*x = GetMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaResponse) ProtoMessage() {}

func (x *GetMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaResponse.ProtoReflect.Descriptor instead.
func (*GetMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{11}
}

func (x *GetMediaResponse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *GetMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to stream media content
type StreamMediaContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Length        int64                  `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMediaContentRequest) Reset() {
	*x = StreamMediaContentRequest{}
	mi := &file_media_v1_media_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMediaContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMediaContentRequest) ProtoMessage() {}

func (x *StreamMediaContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMediaContentRequest.ProtoReflect.Descriptor instead.
func (*StreamMediaContentRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{12}
}

func (x *StreamMediaContentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamMediaContentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StreamMediaContentRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StreamMediaContentRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

// Response for streaming media content
type StreamMediaContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length        int64                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	EndOfStream   bool                   `protobuf:"varint,4,opt,name=end_of_stream,json=endOfStream,proto3" json:"end_of_stream,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMediaContentResponse) Reset() {
	*x = StreamMediaContentResponse{}
	mi := &file_media_v1_media_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMediaContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMediaContentResponse) ProtoMessage() {}

func (x *StreamMediaContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMediaContentResponse.ProtoReflect.Descriptor instead.
func (*StreamMediaContentResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{13}
}

func (x *StreamMediaContentResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamMediaContentResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StreamMediaContentResponse) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *StreamMediaContentResponse) GetEndOfStream() bool {
	if x != nil {
		return x.EndOfStream
	}
	return false
}

func (x *StreamMediaContentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StreamMediaContentResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to delete an media
type DeleteMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMediaRequest) Reset() {
	*x = DeleteMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaRequest) ProtoMessage() {}

func (x *DeleteMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaRequest.ProtoReflect.Descriptor instead.
func (*DeleteMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteMediaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response for deleting an media
type DeleteMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMediaResponse) Reset() {
	*x = DeleteMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaResponse) ProtoMessage() {}

func (x *DeleteMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaResponse.ProtoReflect.Descriptor instead.
func (*DeleteMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMediaResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeleteMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to list user media
type ListUserMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filters       *v1.Metadata           `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserMediaRequest) Reset() {
	*x = ListUserMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMediaRequest) ProtoMessage() {}

func (x *ListUserMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMediaRequest.ProtoReflect.Descriptor instead.
func (*ListUserMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{16}
}

func (x *ListUserMediaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserMediaRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserMediaRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserMediaRequest) GetFilters() *v1.Metadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Response for listing user media
type ListUserMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*Media               `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserMediaResponse) Reset() {
	*x = ListUserMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserMediaResponse) ProtoMessage() {}

func (x *ListUserMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserMediaResponse.ProtoReflect.Descriptor instead.
func (*ListUserMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{17}
}

func (x *ListUserMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ListUserMediaResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListUserMediaResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListUserMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListUserMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to list system media
type ListSystemMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filters       *v1.Metadata           `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemMediaRequest) Reset() {
	*x = ListSystemMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemMediaRequest) ProtoMessage() {}

func (x *ListSystemMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemMediaRequest.ProtoReflect.Descriptor instead.
func (*ListSystemMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{18}
}

func (x *ListSystemMediaRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSystemMediaRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListSystemMediaRequest) GetFilters() *v1.Metadata {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Response for listing system media
type ListSystemMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*Media               `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemMediaResponse) Reset() {
	*x = ListSystemMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemMediaResponse) ProtoMessage() {}

func (x *ListSystemMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemMediaResponse.ProtoReflect.Descriptor instead.
func (*ListSystemMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{19}
}

func (x *ListSystemMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ListSystemMediaResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListSystemMediaResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListSystemMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListSystemMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to subscribe to user media updates
type SubscribeToUserMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToUserMediaRequest) Reset() {
	*x = SubscribeToUserMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToUserMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToUserMediaRequest) ProtoMessage() {}

func (x *SubscribeToUserMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToUserMediaRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToUserMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeToUserMediaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response for subscribing to user media updates
type SubscribeToUserMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*Media               `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToUserMediaResponse) Reset() {
	*x = SubscribeToUserMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToUserMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToUserMediaResponse) ProtoMessage() {}

func (x *SubscribeToUserMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToUserMediaResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToUserMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{21}
}

func (x *SubscribeToUserMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SubscribeToUserMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubscribeToUserMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to subscribe to system media updates
type SubscribeToSystemMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToSystemMediaRequest) Reset() {
	*x = SubscribeToSystemMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToSystemMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToSystemMediaRequest) ProtoMessage() {}

func (x *SubscribeToSystemMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToSystemMediaRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToSystemMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{22}
}

// Response for subscribing to system media updates
type SubscribeToSystemMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*Media               `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToSystemMediaResponse) Reset() {
	*x = SubscribeToSystemMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToSystemMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToSystemMediaResponse) ProtoMessage() {}

func (x *SubscribeToSystemMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToSystemMediaResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToSystemMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{23}
}

func (x *SubscribeToSystemMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SubscribeToSystemMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SubscribeToSystemMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to broadcast a system media
type BroadcastSystemMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastSystemMediaRequest) Reset() {
	*x = BroadcastSystemMediaRequest{}
	mi := &file_media_v1_media_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastSystemMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastSystemMediaRequest) ProtoMessage() {}

func (x *BroadcastSystemMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastSystemMediaRequest.ProtoReflect.Descriptor instead.
func (*BroadcastSystemMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{24}
}

func (x *BroadcastSystemMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BroadcastSystemMediaRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Response for broadcasting a system media
type BroadcastSystemMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastSystemMediaResponse) Reset() {
	*x = BroadcastSystemMediaResponse{}
	mi := &file_media_v1_media_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastSystemMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastSystemMediaResponse) ProtoMessage() {}

func (x *BroadcastSystemMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_v1_media_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastSystemMediaResponse.ProtoReflect.Descriptor instead.
func (*BroadcastSystemMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_v1_media_proto_rawDescGZIP(), []int{25}
}

func (x *BroadcastSystemMediaResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BroadcastSystemMediaResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_media_v1_media_proto protoreflect.FileDescriptor

const file_media_v1_media_proto_rawDesc = "" +
	"\n" +
	"\x14media/v1/media.proto\x12\bmedia.v1\x1a\x18common/v1/metadata.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfe\x03\n" +
	"\x05Media\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tmaster_id\x18\x02 \x01(\x03R\bmasterId\x12\x1f\n" +
	"\vmaster_uuid\x18\x0f \x01(\tR\n" +
	"masterUuid\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12'\n" +
	"\x04type\x18\x04 \x01(\x0e2\x13.media.v1.MediaTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x1b\n" +
	"\tmime_type\x18\x06 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\a \x01(\x03R\x04size\x12\x12\n" +
	"\x04data\x18\b \x01(\fR\x04data\x12\x10\n" +
	"\x03url\x18\t \x01(\tR\x03url\x12\x1b\n" +
	"\tis_system\x18\n" +
	" \x01(\bR\bisSystem\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"deleted_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\x12,\n" +
	"\bmetadata\x18\x0e \x01(\v2\x10.common.MetadataR\bmetadata\"\xb9\x01\n" +
	"\x17UploadLightMediaRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12,\n" +
	"\bmetadata\x18\x06 \x01(\v2\x10.common.MetadataR\bmetadata\"o\n" +
	"\x18UploadLightMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x01(\v2\x0f.media.v1.MediaR\x05media\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xaa\x01\n" +
	"\x1cStartHeavyMediaUploadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12,\n" +
	"\bmetadata\x18\x05 \x01(\v2\x10.common.MetadataR\bmetadata\"\xac\x01\n" +
	"\x1dStartHeavyMediaUploadResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x05R\tchunkSize\x12!\n" +
	"\fchunks_total\x18\x03 \x01(\x05R\vchunksTotal\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"u\n" +
	"\n" +
	"MediaChunk\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\rR\bsequence\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\"b\n" +
	"\x17StreamMediaChunkRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12*\n" +
	"\x05chunk\x18\x02 \x01(\v2\x14.media.v1.MediaChunkR\x05chunk\"\x81\x01\n" +
	"\x18StreamMediaChunkResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\rR\bsequence\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"R\n" +
	"\x1aCompleteMediaUploadRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"r\n" +
	"\x1bCompleteMediaUploadResponse\x12%\n" +
	"\x05media\x18\x01 \x01(\v2\x0f.media.v1.MediaR\x05media\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\":\n" +
	"\x0fGetMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"g\n" +
	"\x10GetMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x01(\v2\x0f.media.v1.MediaR\x05media\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"t\n" +
	"\x19StreamMediaContentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12\x16\n" +
	"\x06length\x18\x04 \x01(\x03R\x06length\"\xb2\x01\n" +
	"\x1aStreamMediaContentResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x03R\x06length\x12\"\n" +
	"\rend_of_stream\x18\x04 \x01(\bR\vendOfStream\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\"=\n" +
	"\x12DeleteMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"S\n" +
	"\x13DeleteMediaResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\x97\x01\n" +
	"\x14ListUserMediaRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12*\n" +
	"\afilters\x18\x04 \x01(\v2\x10.common.MetadataR\afilters\"\xb5\x01\n" +
	"\x15ListUserMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x03(\v2\x0f.media.v1.MediaR\x05media\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"\x80\x01\n" +
	"\x16ListSystemMediaRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12*\n" +
	"\afilters\x18\x03 \x01(\v2\x10.common.MetadataR\afilters\"\xb7\x01\n" +
	"\x17ListSystemMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x03(\v2\x0f.media.v1.MediaR\x05media\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\"6\n" +
	"\x1bSubscribeToUserMediaRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"s\n" +
	"\x1cSubscribeToUserMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x03(\v2\x0f.media.v1.MediaR\x05media\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\x1f\n" +
	"\x1dSubscribeToSystemMediaRequest\"u\n" +
	"\x1eSubscribeToSystemMediaResponse\x12%\n" +
	"\x05media\x18\x01 \x03(\v2\x0f.media.v1.MediaR\x05media\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"F\n" +
	"\x1bBroadcastSystemMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"L\n" +
	"\x1cBroadcastSystemMediaResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error*S\n" +
	"\tMediaType\x12\x1a\n" +
	"\x16MEDIA_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MEDIA_TYPE_LIGHT\x10\x01\x12\x14\n" +
	"\x10MEDIA_TYPE_HEAVY\x10\x022\xe7\b\n" +
	"\fMediaService\x12Y\n" +
	"\x10UploadLightMedia\x12!.media.v1.UploadLightMediaRequest\x1a\".media.v1.UploadLightMediaResponse\x12h\n" +
	"\x15StartHeavyMediaUpload\x12&.media.v1.StartHeavyMediaUploadRequest\x1a'.media.v1.StartHeavyMediaUploadResponse\x12Y\n" +
	"\x10StreamMediaChunk\x12!.media.v1.StreamMediaChunkRequest\x1a\".media.v1.StreamMediaChunkResponse\x12b\n" +
	"\x13CompleteMediaUpload\x12$.media.v1.CompleteMediaUploadRequest\x1a%.media.v1.CompleteMediaUploadResponse\x12A\n" +
	"\bGetMedia\x12\x19.media.v1.GetMediaRequest\x1a\x1a.media.v1.GetMediaResponse\x12_\n" +
	"\x12StreamMediaContent\x12#.media.v1.StreamMediaContentRequest\x1a$.media.v1.StreamMediaContentResponse\x12J\n" +
	"\vDeleteMedia\x12\x1c.media.v1.DeleteMediaRequest\x1a\x1d.media.v1.DeleteMediaResponse\x12P\n" +
	"\rListUserMedia\x12\x1e.media.v1.ListUserMediaRequest\x1a\x1f.media.v1.ListUserMediaResponse\x12V\n" +
	"\x0fListSystemMedia\x12 .media.v1.ListSystemMediaRequest\x1a!.media.v1.ListSystemMediaResponse\x12e\n" +
	"\x14SubscribeToUserMedia\x12%.media.v1.SubscribeToUserMediaRequest\x1a&.media.v1.SubscribeToUserMediaResponse\x12k\n" +
	"\x16SubscribeToSystemMedia\x12'.media.v1.SubscribeToSystemMediaRequest\x1a(.media.v1.SubscribeToSystemMediaResponse\x12e\n" +
	"\x14BroadcastSystemMedia\x12%.media.v1.BroadcastSystemMediaRequest\x1a&.media.v1.BroadcastSystemMediaResponseB,Z*master-ovasabi/api/protos/media/v1;mediav1b\x06proto3"

var (
	file_media_v1_media_proto_rawDescOnce sync.Once
	file_media_v1_media_proto_rawDescData []byte
)

func file_media_v1_media_proto_rawDescGZIP() []byte {
	file_media_v1_media_proto_rawDescOnce.Do(func() {
		file_media_v1_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_media_v1_media_proto_rawDesc), len(file_media_v1_media_proto_rawDesc)))
	})
	return file_media_v1_media_proto_rawDescData
}

var file_media_v1_media_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_media_v1_media_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_media_v1_media_proto_goTypes = []any{
	(MediaType)(0),                         // 0: media.v1.MediaType
	(*Media)(nil),                          // 1: media.v1.Media
	(*UploadLightMediaRequest)(nil),        // 2: media.v1.UploadLightMediaRequest
	(*UploadLightMediaResponse)(nil),       // 3: media.v1.UploadLightMediaResponse
	(*StartHeavyMediaUploadRequest)(nil),   // 4: media.v1.StartHeavyMediaUploadRequest
	(*StartHeavyMediaUploadResponse)(nil),  // 5: media.v1.StartHeavyMediaUploadResponse
	(*MediaChunk)(nil),                     // 6: media.v1.MediaChunk
	(*StreamMediaChunkRequest)(nil),        // 7: media.v1.StreamMediaChunkRequest
	(*StreamMediaChunkResponse)(nil),       // 8: media.v1.StreamMediaChunkResponse
	(*CompleteMediaUploadRequest)(nil),     // 9: media.v1.CompleteMediaUploadRequest
	(*CompleteMediaUploadResponse)(nil),    // 10: media.v1.CompleteMediaUploadResponse
	(*GetMediaRequest)(nil),                // 11: media.v1.GetMediaRequest
	(*GetMediaResponse)(nil),               // 12: media.v1.GetMediaResponse
	(*StreamMediaContentRequest)(nil),      // 13: media.v1.StreamMediaContentRequest
	(*StreamMediaContentResponse)(nil),     // 14: media.v1.StreamMediaContentResponse
	(*DeleteMediaRequest)(nil),             // 15: media.v1.DeleteMediaRequest
	(*DeleteMediaResponse)(nil),            // 16: media.v1.DeleteMediaResponse
	(*ListUserMediaRequest)(nil),           // 17: media.v1.ListUserMediaRequest
	(*ListUserMediaResponse)(nil),          // 18: media.v1.ListUserMediaResponse
	(*ListSystemMediaRequest)(nil),         // 19: media.v1.ListSystemMediaRequest
	(*ListSystemMediaResponse)(nil),        // 20: media.v1.ListSystemMediaResponse
	(*SubscribeToUserMediaRequest)(nil),    // 21: media.v1.SubscribeToUserMediaRequest
	(*SubscribeToUserMediaResponse)(nil),   // 22: media.v1.SubscribeToUserMediaResponse
	(*SubscribeToSystemMediaRequest)(nil),  // 23: media.v1.SubscribeToSystemMediaRequest
	(*SubscribeToSystemMediaResponse)(nil), // 24: media.v1.SubscribeToSystemMediaResponse
	(*BroadcastSystemMediaRequest)(nil),    // 25: media.v1.BroadcastSystemMediaRequest
	(*BroadcastSystemMediaResponse)(nil),   // 26: media.v1.BroadcastSystemMediaResponse
	(*timestamppb.Timestamp)(nil),          // 27: google.protobuf.Timestamp
	(*v1.Metadata)(nil),                    // 28: common.Metadata
}
var file_media_v1_media_proto_depIdxs = []int32{
	0,  // 0: media.v1.Media.type:type_name -> media.v1.MediaType
	27, // 1: media.v1.Media.created_at:type_name -> google.protobuf.Timestamp
	27, // 2: media.v1.Media.updated_at:type_name -> google.protobuf.Timestamp
	27, // 3: media.v1.Media.deleted_at:type_name -> google.protobuf.Timestamp
	28, // 4: media.v1.Media.metadata:type_name -> common.Metadata
	28, // 5: media.v1.UploadLightMediaRequest.metadata:type_name -> common.Metadata
	1,  // 6: media.v1.UploadLightMediaResponse.media:type_name -> media.v1.Media
	28, // 7: media.v1.StartHeavyMediaUploadRequest.metadata:type_name -> common.Metadata
	6,  // 8: media.v1.StreamMediaChunkRequest.chunk:type_name -> media.v1.MediaChunk
	1,  // 9: media.v1.CompleteMediaUploadResponse.media:type_name -> media.v1.Media
	1,  // 10: media.v1.GetMediaResponse.media:type_name -> media.v1.Media
	28, // 11: media.v1.ListUserMediaRequest.filters:type_name -> common.Metadata
	1,  // 12: media.v1.ListUserMediaResponse.media:type_name -> media.v1.Media
	28, // 13: media.v1.ListSystemMediaRequest.filters:type_name -> common.Metadata
	1,  // 14: media.v1.ListSystemMediaResponse.media:type_name -> media.v1.Media
	1,  // 15: media.v1.SubscribeToUserMediaResponse.media:type_name -> media.v1.Media
	1,  // 16: media.v1.SubscribeToSystemMediaResponse.media:type_name -> media.v1.Media
	2,  // 17: media.v1.MediaService.UploadLightMedia:input_type -> media.v1.UploadLightMediaRequest
	4,  // 18: media.v1.MediaService.StartHeavyMediaUpload:input_type -> media.v1.StartHeavyMediaUploadRequest
	7,  // 19: media.v1.MediaService.StreamMediaChunk:input_type -> media.v1.StreamMediaChunkRequest
	9,  // 20: media.v1.MediaService.CompleteMediaUpload:input_type -> media.v1.CompleteMediaUploadRequest
	11, // 21: media.v1.MediaService.GetMedia:input_type -> media.v1.GetMediaRequest
	13, // 22: media.v1.MediaService.StreamMediaContent:input_type -> media.v1.StreamMediaContentRequest
	15, // 23: media.v1.MediaService.DeleteMedia:input_type -> media.v1.DeleteMediaRequest
	17, // 24: media.v1.MediaService.ListUserMedia:input_type -> media.v1.ListUserMediaRequest
	19, // 25: media.v1.MediaService.ListSystemMedia:input_type -> media.v1.ListSystemMediaRequest
	21, // 26: media.v1.MediaService.SubscribeToUserMedia:input_type -> media.v1.SubscribeToUserMediaRequest
	23, // 27: media.v1.MediaService.SubscribeToSystemMedia:input_type -> media.v1.SubscribeToSystemMediaRequest
	25, // 28: media.v1.MediaService.BroadcastSystemMedia:input_type -> media.v1.BroadcastSystemMediaRequest
	3,  // 29: media.v1.MediaService.UploadLightMedia:output_type -> media.v1.UploadLightMediaResponse
	5,  // 30: media.v1.MediaService.StartHeavyMediaUpload:output_type -> media.v1.StartHeavyMediaUploadResponse
	8,  // 31: media.v1.MediaService.StreamMediaChunk:output_type -> media.v1.StreamMediaChunkResponse
	10, // 32: media.v1.MediaService.CompleteMediaUpload:output_type -> media.v1.CompleteMediaUploadResponse
	12, // 33: media.v1.MediaService.GetMedia:output_type -> media.v1.GetMediaResponse
	14, // 34: media.v1.MediaService.StreamMediaContent:output_type -> media.v1.StreamMediaContentResponse
	16, // 35: media.v1.MediaService.DeleteMedia:output_type -> media.v1.DeleteMediaResponse
	18, // 36: media.v1.MediaService.ListUserMedia:output_type -> media.v1.ListUserMediaResponse
	20, // 37: media.v1.MediaService.ListSystemMedia:output_type -> media.v1.ListSystemMediaResponse
	22, // 38: media.v1.MediaService.SubscribeToUserMedia:output_type -> media.v1.SubscribeToUserMediaResponse
	24, // 39: media.v1.MediaService.SubscribeToSystemMedia:output_type -> media.v1.SubscribeToSystemMediaResponse
	26, // 40: media.v1.MediaService.BroadcastSystemMedia:output_type -> media.v1.BroadcastSystemMediaResponse
	29, // [29:41] is the sub-list for method output_type
	17, // [17:29] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_media_v1_media_proto_init() }
func file_media_v1_media_proto_init() {
	if File_media_v1_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_v1_media_proto_rawDesc), len(file_media_v1_media_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_v1_media_proto_goTypes,
		DependencyIndexes: file_media_v1_media_proto_depIdxs,
		EnumInfos:         file_media_v1_media_proto_enumTypes,
		MessageInfos:      file_media_v1_media_proto_msgTypes,
	}.Build()
	File_media_v1_media_proto = out.File
	file_media_v1_media_proto_goTypes = nil
	file_media_v1_media_proto_depIdxs = nil
}
