syntax = "proto3";

package notification;

option go_package = "github.com/nmxmxh/master-ovasabi/api/protos/notification";

// NotificationService handles sending various types of notifications
service NotificationService {
  // SendEmail sends an email notification
  rpc SendEmail(SendEmailRequest) returns (SendEmailResponse) {}
  
  // SendSMS sends an SMS notification
  rpc SendSMS(SendSMSRequest) returns (SendSMSResponse) {}
  
  // SendPushNotification sends a push notification
  rpc SendPushNotification(SendPushNotificationRequest) returns (SendPushNotificationResponse) {}
  
  // GetNotificationHistory retrieves notification history for a user
  rpc GetNotificationHistory(GetNotificationHistoryRequest) returns (GetNotificationHistoryResponse) {}
  
  // UpdateNotificationPreferences updates a user's notification preferences
  rpc UpdateNotificationPreferences(UpdateNotificationPreferencesRequest) returns (UpdateNotificationPreferencesResponse) {}
}

// SendEmailRequest represents the request to send an email
message SendEmailRequest {
  string to = 1;
  string subject = 2;
  string body = 3;
  map<string, string> metadata = 4;
  bool html = 5;
}

// SendEmailResponse represents the response from sending an email
message SendEmailResponse {
  string message_id = 1;
  string status = 2;
  int64 sent_at = 3;
}

// SendSMSRequest represents the request to send an SMS
message SendSMSRequest {
  string to = 1;
  string message = 2;
  map<string, string> metadata = 3;
}

// SendSMSResponse represents the response from sending an SMS
message SendSMSResponse {
  string message_id = 1;
  string status = 2;
  int64 sent_at = 3;
}

// SendPushNotificationRequest represents the request to send a push notification
message SendPushNotificationRequest {
  string user_id = 1;
  string title = 2;
  string message = 3;
  map<string, string> metadata = 4;
  string deep_link = 5;
}

// SendPushNotificationResponse represents the response from sending a push notification
message SendPushNotificationResponse {
  string notification_id = 1;
  string status = 2;
  int64 sent_at = 3;
}

// NotificationHistory represents a single notification record
message NotificationHistory {
  string id = 1;
  string type = 2;
  string status = 3;
  string content = 4;
  map<string, string> metadata = 5;
  int64 created_at = 6;
}

// GetNotificationHistoryRequest represents the request to get notification history
message GetNotificationHistoryRequest {
  string user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
  string type = 4;
  int64 start_date = 5;
  int64 end_date = 6;
}

// GetNotificationHistoryResponse represents the response containing notification history
message GetNotificationHistoryResponse {
  repeated NotificationHistory notifications = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 total_pages = 4;
}

// NotificationPreferences represents user notification preferences
message NotificationPreferences {
  bool email_enabled = 1;
  bool sms_enabled = 2;
  bool push_enabled = 3;
  map<string, bool> notification_types = 4;
  repeated string quiet_hours = 5;
  string timezone = 6;
}

// UpdateNotificationPreferencesRequest represents the request to update notification preferences
message UpdateNotificationPreferencesRequest {
  string user_id = 1;
  NotificationPreferences preferences = 2;
}

// UpdateNotificationPreferencesResponse represents the response from updating notification preferences
message UpdateNotificationPreferencesResponse {
  NotificationPreferences preferences = 1;
  int64 updated_at = 2;
} 