// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: crawler/v1/crawler.proto

package crawlerpb

import (
	v1 "github.com/nmxmxh/master-ovasabi/api/protos/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TaskType defines the kind of resource the crawler should process.
type TaskType int32

const (
	TaskType_TASK_TYPE_UNSPECIFIED TaskType = 0
	TaskType_TASK_TYPE_HTML        TaskType = 1
	TaskType_TASK_TYPE_TORRENT     TaskType = 2
	TaskType_TASK_TYPE_API         TaskType = 3
	TaskType_TASK_TYPE_FILE        TaskType = 4
	TaskType_TASK_TYPE_SOCKET      TaskType = 5
	TaskType_TASK_TYPE_BROWSER     TaskType = 6 // For browser emulation
	TaskType_TASK_TYPE_ARCHIVE     TaskType = 7 // For archive files (.zip, .tar.gz, etc.)
	TaskType_TASK_TYPE_VIDEO       TaskType = 8 // For video files
	TaskType_TASK_TYPE_SHELL       TaskType = 9 // For executing shell commands
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_TYPE_UNSPECIFIED",
		1: "TASK_TYPE_HTML",
		2: "TASK_TYPE_TORRENT",
		3: "TASK_TYPE_API",
		4: "TASK_TYPE_FILE",
		5: "TASK_TYPE_SOCKET",
		6: "TASK_TYPE_BROWSER",
		7: "TASK_TYPE_ARCHIVE",
		8: "TASK_TYPE_VIDEO",
		9: "TASK_TYPE_SHELL",
	}
	TaskType_value = map[string]int32{
		"TASK_TYPE_UNSPECIFIED": 0,
		"TASK_TYPE_HTML":        1,
		"TASK_TYPE_TORRENT":     2,
		"TASK_TYPE_API":         3,
		"TASK_TYPE_FILE":        4,
		"TASK_TYPE_SOCKET":      5,
		"TASK_TYPE_BROWSER":     6,
		"TASK_TYPE_ARCHIVE":     7,
		"TASK_TYPE_VIDEO":       8,
		"TASK_TYPE_SHELL":       9,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawler_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawler_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{0}
}

// TaskStatus represents the lifecycle of a crawl task.
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_PROCESSING  TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4
	TaskStatus_TASK_STATUS_QUARANTINED TaskStatus = 5 // For tasks that fail security/cleaning
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_PROCESSING",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_QUARANTINED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_PROCESSING":  2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_QUARANTINED": 5,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawler_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawler_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{1}
}

// ContentType describes the nature of the extracted content.
type ContentType int32

const (
	ContentType_CONTENT_TYPE_UNSPECIFIED ContentType = 0
	ContentType_CONTENT_TYPE_TEXT        ContentType = 1
	ContentType_CONTENT_TYPE_IMAGE       ContentType = 2
	ContentType_CONTENT_TYPE_AUDIO       ContentType = 3
	ContentType_CONTENT_TYPE_VIDEO       ContentType = 4
	ContentType_CONTENT_TYPE_BINARY      ContentType = 5
	ContentType_CONTENT_TYPE_HTML        ContentType = 6
	ContentType_CONTENT_TYPE_PDF         ContentType = 7
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "CONTENT_TYPE_UNSPECIFIED",
		1: "CONTENT_TYPE_TEXT",
		2: "CONTENT_TYPE_IMAGE",
		3: "CONTENT_TYPE_AUDIO",
		4: "CONTENT_TYPE_VIDEO",
		5: "CONTENT_TYPE_BINARY",
		6: "CONTENT_TYPE_HTML",
		7: "CONTENT_TYPE_PDF",
	}
	ContentType_value = map[string]int32{
		"CONTENT_TYPE_UNSPECIFIED": 0,
		"CONTENT_TYPE_TEXT":        1,
		"CONTENT_TYPE_IMAGE":       2,
		"CONTENT_TYPE_AUDIO":       3,
		"CONTENT_TYPE_VIDEO":       4,
		"CONTENT_TYPE_BINARY":      5,
		"CONTENT_TYPE_HTML":        6,
		"CONTENT_TYPE_PDF":         7,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawler_proto_enumTypes[2].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawler_proto_enumTypes[2]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{2}
}

// CrawlTask represents a job for a worker to execute.
// It is designed to be traceable, secure, and extensible.
type CrawlTask struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid       string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	MasterId   int64                  `protobuf:"varint,3,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	MasterUuid string                 `protobuf:"bytes,4,opt,name=master_uuid,json=masterUuid,proto3" json:"master_uuid,omitempty"`
	// The type of worker to use for this task.
	Type TaskType `protobuf:"varint,5,opt,name=type,proto3,enum=crawler.v1.TaskType" json:"type,omitempty"`
	// The resource to crawl (URL, file path, magnet link, etc.).
	Target string `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`
	// Recursion depth control. 0 means no recursion.
	Depth int32 `protobuf:"varint,7,opt,name=depth,proto3" json:"depth,omitempty"`
	// e.g., ["no-executable", "text-only", "max-size:10MB"]
	Filters []string `protobuf:"bytes,8,rep,name=filters,proto3" json:"filters,omitempty"`
	// Current status of the task.
	Status    TaskStatus             `protobuf:"varint,9,opt,name=status,proto3,enum=crawler.v1.TaskStatus" json:"status,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Canonical metadata for orchestration, context, and extensibility.
	Metadata      *v1.Metadata `protobuf:"bytes,12,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrawlTask) Reset() {
	*x = CrawlTask{}
	mi := &file_crawler_v1_crawler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlTask) ProtoMessage() {}

func (x *CrawlTask) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlTask.ProtoReflect.Descriptor instead.
func (*CrawlTask) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{0}
}

func (x *CrawlTask) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrawlTask) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CrawlTask) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *CrawlTask) GetMasterUuid() string {
	if x != nil {
		return x.MasterUuid
	}
	return ""
}

func (x *CrawlTask) GetType() TaskType {
	if x != nil {
		return x.Type
	}
	return TaskType_TASK_TYPE_UNSPECIFIED
}

func (x *CrawlTask) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CrawlTask) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *CrawlTask) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CrawlTask) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *CrawlTask) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CrawlTask) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CrawlTask) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// CrawlResult is the output from a worker after processing a task.
type CrawlResult struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid       string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	MasterId   int64                  `protobuf:"varint,3,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
	MasterUuid string                 `protobuf:"bytes,4,opt,name=master_uuid,json=masterUuid,proto3" json:"master_uuid,omitempty"`
	// Corresponds to the CrawlTask UUID.
	TaskUuid string `protobuf:"bytes,5,opt,name=task_uuid,json=taskUuid,proto3" json:"task_uuid,omitempty"`
	// Final status of the task.
	Status TaskStatus `protobuf:"varint,6,opt,name=status,proto3,enum=crawler.v1.TaskStatus" json:"status,omitempty"`
	// Raw or cleaned content.
	ExtractedContent []byte `protobuf:"bytes,7,opt,name=extracted_content,json=extractedContent,proto3" json:"extracted_content,omitempty"`
	// Links discovered during crawl.
	ExtractedLinks []string `protobuf:"bytes,8,rep,name=extracted_links,json=extractedLinks,proto3" json:"extracted_links,omitempty"`
	// Details on failure.
	ErrorMessage string `protobuf:"bytes,9,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Enriched metadata from the crawl process.
	Metadata      *v1.Metadata           `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrawlResult) Reset() {
	*x = CrawlResult{}
	mi := &file_crawler_v1_crawler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlResult) ProtoMessage() {}

func (x *CrawlResult) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlResult.ProtoReflect.Descriptor instead.
func (*CrawlResult) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{1}
}

func (x *CrawlResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CrawlResult) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CrawlResult) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

func (x *CrawlResult) GetMasterUuid() string {
	if x != nil {
		return x.MasterUuid
	}
	return ""
}

func (x *CrawlResult) GetTaskUuid() string {
	if x != nil {
		return x.TaskUuid
	}
	return ""
}

func (x *CrawlResult) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *CrawlResult) GetExtractedContent() []byte {
	if x != nil {
		return x.ExtractedContent
	}
	return nil
}

func (x *CrawlResult) GetExtractedLinks() []string {
	if x != nil {
		return x.ExtractedLinks
	}
	return nil
}

func (x *CrawlResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CrawlResult) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CrawlResult) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CrawlResult) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SubmitTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *CrawlTask             `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskRequest) Reset() {
	*x = SubmitTaskRequest{}
	mi := &file_crawler_v1_crawler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequest) ProtoMessage() {}

func (x *SubmitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitTaskRequest) GetTask() *CrawlTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type SubmitTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=crawler.v1.TaskStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // e.g., "Task submitted successfully"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskResponse) Reset() {
	*x = SubmitTaskResponse{}
	mi := &file_crawler_v1_crawler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskResponse) ProtoMessage() {}

func (x *SubmitTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitTaskResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SubmitTaskResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *SubmitTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusRequest) Reset() {
	*x = GetTaskStatusRequest{}
	mi := &file_crawler_v1_crawler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusRequest) ProtoMessage() {}

func (x *GetTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskStatusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type StreamResultsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskUuid      string                 `protobuf:"bytes,1,opt,name=task_uuid,json=taskUuid,proto3" json:"task_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResultsRequest) Reset() {
	*x = StreamResultsRequest{}
	mi := &file_crawler_v1_crawler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResultsRequest) ProtoMessage() {}

func (x *StreamResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResultsRequest.ProtoReflect.Descriptor instead.
func (*StreamResultsRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawler_proto_rawDescGZIP(), []int{5}
}

func (x *StreamResultsRequest) GetTaskUuid() string {
	if x != nil {
		return x.TaskUuid
	}
	return ""
}

var File_crawler_v1_crawler_proto protoreflect.FileDescriptor

const file_crawler_v1_crawler_proto_rawDesc = "" +
	"\n" +
	"\x18crawler/v1/crawler.proto\x12\n" +
	"crawler.v1\x1a\x18common/v1/metadata.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb3\x03\n" +
	"\tCrawlTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x1b\n" +
	"\tmaster_id\x18\x03 \x01(\x03R\bmasterId\x12\x1f\n" +
	"\vmaster_uuid\x18\x04 \x01(\tR\n" +
	"masterUuid\x12(\n" +
	"\x04type\x18\x05 \x01(\x0e2\x14.crawler.v1.TaskTypeR\x04type\x12\x16\n" +
	"\x06target\x18\x06 \x01(\tR\x06target\x12\x14\n" +
	"\x05depth\x18\a \x01(\x05R\x05depth\x12\x18\n" +
	"\afilters\x18\b \x03(\tR\afilters\x12.\n" +
	"\x06status\x18\t \x01(\x0e2\x16.crawler.v1.TaskStatusR\x06status\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12,\n" +
	"\bmetadata\x18\f \x01(\v2\x10.common.MetadataR\bmetadata\"\xdb\x03\n" +
	"\vCrawlResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x1b\n" +
	"\tmaster_id\x18\x03 \x01(\x03R\bmasterId\x12\x1f\n" +
	"\vmaster_uuid\x18\x04 \x01(\tR\n" +
	"masterUuid\x12\x1b\n" +
	"\ttask_uuid\x18\x05 \x01(\tR\btaskUuid\x12.\n" +
	"\x06status\x18\x06 \x01(\x0e2\x16.crawler.v1.TaskStatusR\x06status\x12+\n" +
	"\x11extracted_content\x18\a \x01(\fR\x10extractedContent\x12'\n" +
	"\x0fextracted_links\x18\b \x03(\tR\x0eextractedLinks\x12#\n" +
	"\rerror_message\x18\t \x01(\tR\ferrorMessage\x12,\n" +
	"\bmetadata\x18\n" +
	" \x01(\v2\x10.common.MetadataR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\">\n" +
	"\x11SubmitTaskRequest\x12)\n" +
	"\x04task\x18\x01 \x01(\v2\x15.crawler.v1.CrawlTaskR\x04task\"r\n" +
	"\x12SubmitTaskResponse\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.crawler.v1.TaskStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"*\n" +
	"\x14GetTaskStatusRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"3\n" +
	"\x14StreamResultsRequest\x12\x1b\n" +
	"\ttask_uuid\x18\x01 \x01(\tR\btaskUuid*\xe5\x01\n" +
	"\bTaskType\x12\x19\n" +
	"\x15TASK_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eTASK_TYPE_HTML\x10\x01\x12\x15\n" +
	"\x11TASK_TYPE_TORRENT\x10\x02\x12\x11\n" +
	"\rTASK_TYPE_API\x10\x03\x12\x12\n" +
	"\x0eTASK_TYPE_FILE\x10\x04\x12\x14\n" +
	"\x10TASK_TYPE_SOCKET\x10\x05\x12\x15\n" +
	"\x11TASK_TYPE_BROWSER\x10\x06\x12\x15\n" +
	"\x11TASK_TYPE_ARCHIVE\x10\a\x12\x13\n" +
	"\x0fTASK_TYPE_VIDEO\x10\b\x12\x13\n" +
	"\x0fTASK_TYPE_SHELL\x10\t*\xae\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x1a\n" +
	"\x16TASK_STATUS_PROCESSING\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_COMPLETED\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x1b\n" +
	"\x17TASK_STATUS_QUARANTINED\x10\x05*\xd0\x01\n" +
	"\vContentType\x12\x1c\n" +
	"\x18CONTENT_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11CONTENT_TYPE_TEXT\x10\x01\x12\x16\n" +
	"\x12CONTENT_TYPE_IMAGE\x10\x02\x12\x16\n" +
	"\x12CONTENT_TYPE_AUDIO\x10\x03\x12\x16\n" +
	"\x12CONTENT_TYPE_VIDEO\x10\x04\x12\x17\n" +
	"\x13CONTENT_TYPE_BINARY\x10\x05\x12\x15\n" +
	"\x11CONTENT_TYPE_HTML\x10\x06\x12\x14\n" +
	"\x10CONTENT_TYPE_PDF\x10\a2\xf5\x01\n" +
	"\x0eCrawlerService\x12K\n" +
	"\n" +
	"SubmitTask\x12\x1d.crawler.v1.SubmitTaskRequest\x1a\x1e.crawler.v1.SubmitTaskResponse\x12H\n" +
	"\rGetTaskStatus\x12 .crawler.v1.GetTaskStatusRequest\x1a\x15.crawler.v1.CrawlTask\x12L\n" +
	"\rStreamResults\x12 .crawler.v1.StreamResultsRequest\x1a\x17.crawler.v1.CrawlResult0\x01BBZ@github.com/nmxmxh/master-ovasabi/api/protos/crawler/v1;crawlerpbb\x06proto3"

var (
	file_crawler_v1_crawler_proto_rawDescOnce sync.Once
	file_crawler_v1_crawler_proto_rawDescData []byte
)

func file_crawler_v1_crawler_proto_rawDescGZIP() []byte {
	file_crawler_v1_crawler_proto_rawDescOnce.Do(func() {
		file_crawler_v1_crawler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crawler_v1_crawler_proto_rawDesc), len(file_crawler_v1_crawler_proto_rawDesc)))
	})
	return file_crawler_v1_crawler_proto_rawDescData
}

var file_crawler_v1_crawler_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_crawler_v1_crawler_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_crawler_v1_crawler_proto_goTypes = []any{
	(TaskType)(0),                 // 0: crawler.v1.TaskType
	(TaskStatus)(0),               // 1: crawler.v1.TaskStatus
	(ContentType)(0),              // 2: crawler.v1.ContentType
	(*CrawlTask)(nil),             // 3: crawler.v1.CrawlTask
	(*CrawlResult)(nil),           // 4: crawler.v1.CrawlResult
	(*SubmitTaskRequest)(nil),     // 5: crawler.v1.SubmitTaskRequest
	(*SubmitTaskResponse)(nil),    // 6: crawler.v1.SubmitTaskResponse
	(*GetTaskStatusRequest)(nil),  // 7: crawler.v1.GetTaskStatusRequest
	(*StreamResultsRequest)(nil),  // 8: crawler.v1.StreamResultsRequest
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*v1.Metadata)(nil),           // 10: common.Metadata
}
var file_crawler_v1_crawler_proto_depIdxs = []int32{
	0,  // 0: crawler.v1.CrawlTask.type:type_name -> crawler.v1.TaskType
	1,  // 1: crawler.v1.CrawlTask.status:type_name -> crawler.v1.TaskStatus
	9,  // 2: crawler.v1.CrawlTask.created_at:type_name -> google.protobuf.Timestamp
	9,  // 3: crawler.v1.CrawlTask.updated_at:type_name -> google.protobuf.Timestamp
	10, // 4: crawler.v1.CrawlTask.metadata:type_name -> common.Metadata
	1,  // 5: crawler.v1.CrawlResult.status:type_name -> crawler.v1.TaskStatus
	10, // 6: crawler.v1.CrawlResult.metadata:type_name -> common.Metadata
	9,  // 7: crawler.v1.CrawlResult.created_at:type_name -> google.protobuf.Timestamp
	9,  // 8: crawler.v1.CrawlResult.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 9: crawler.v1.SubmitTaskRequest.task:type_name -> crawler.v1.CrawlTask
	1,  // 10: crawler.v1.SubmitTaskResponse.status:type_name -> crawler.v1.TaskStatus
	5,  // 11: crawler.v1.CrawlerService.SubmitTask:input_type -> crawler.v1.SubmitTaskRequest
	7,  // 12: crawler.v1.CrawlerService.GetTaskStatus:input_type -> crawler.v1.GetTaskStatusRequest
	8,  // 13: crawler.v1.CrawlerService.StreamResults:input_type -> crawler.v1.StreamResultsRequest
	6,  // 14: crawler.v1.CrawlerService.SubmitTask:output_type -> crawler.v1.SubmitTaskResponse
	3,  // 15: crawler.v1.CrawlerService.GetTaskStatus:output_type -> crawler.v1.CrawlTask
	4,  // 16: crawler.v1.CrawlerService.StreamResults:output_type -> crawler.v1.CrawlResult
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_crawler_v1_crawler_proto_init() }
func file_crawler_v1_crawler_proto_init() {
	if File_crawler_v1_crawler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crawler_v1_crawler_proto_rawDesc), len(file_crawler_v1_crawler_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawler_v1_crawler_proto_goTypes,
		DependencyIndexes: file_crawler_v1_crawler_proto_depIdxs,
		EnumInfos:         file_crawler_v1_crawler_proto_enumTypes,
		MessageInfos:      file_crawler_v1_crawler_proto_msgTypes,
	}.Build()
	File_crawler_v1_crawler_proto = out.File
	file_crawler_v1_crawler_proto_goTypes = nil
	file_crawler_v1_crawler_proto_depIdxs = nil
}
