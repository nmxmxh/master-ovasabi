// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: asset/v1/asset.proto

package assetv0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Asset types
type AssetType int32

const (
	AssetType_ASSET_TYPE_UNSPECIFIED AssetType = 0
	AssetType_ASSET_TYPE_LIGHT       AssetType = 1 // < 500KB, stored in DB
	AssetType_ASSET_TYPE_HEAVY       AssetType = 2 // >= 500KB, stored externally
)

// Enum value maps for AssetType.
var (
	AssetType_name = map[int32]string{
		0: "ASSET_TYPE_UNSPECIFIED",
		1: "ASSET_TYPE_LIGHT",
		2: "ASSET_TYPE_HEAVY",
	}
	AssetType_value = map[string]int32{
		"ASSET_TYPE_UNSPECIFIED": 0,
		"ASSET_TYPE_LIGHT":       1,
		"ASSET_TYPE_HEAVY":       2,
	}
)

func (x AssetType) Enum() *AssetType {
	p := new(AssetType)
	*p = x
	return p
}

func (x AssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_asset_v1_asset_proto_enumTypes[0].Descriptor()
}

func (AssetType) Type() protoreflect.EnumType {
	return &file_asset_v1_asset_proto_enumTypes[0]
}

func (x AssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetType.Descriptor instead.
func (AssetType) EnumDescriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{0}
}

// Asset represents a 3D asset and its metadata
type Asset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Owner user ID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Asset type (light/heavy)
	Type AssetType `protobuf:"varint,3,opt,name=type,proto3,enum=asset.v1.AssetType" json:"type,omitempty"`
	// Asset name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// MIME type
	MimeType string `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Size in bytes
	Size int64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// Binary data for light assets
	Data []byte `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	// URL for heavy assets
	Url string `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	// Whether this is a system asset
	IsSystem bool `protobuf:"varint,9,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	// Creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Deletion timestamp (if soft deleted)
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_asset_v1_asset_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Asset) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_ASSET_TYPE_UNSPECIFIED
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Asset) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Asset) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Asset) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Asset) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *Asset) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Asset) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Asset) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// Request to upload a light asset
type UploadLightAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadLightAssetRequest) Reset() {
	*x = UploadLightAssetRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadLightAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLightAssetRequest) ProtoMessage() {}

func (x *UploadLightAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLightAssetRequest.ProtoReflect.Descriptor instead.
func (*UploadLightAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{1}
}

// Response for uploading a light asset
type UploadLightAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadLightAssetResponse) Reset() {
	*x = UploadLightAssetResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadLightAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLightAssetResponse) ProtoMessage() {}

func (x *UploadLightAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLightAssetResponse.ProtoReflect.Descriptor instead.
func (*UploadLightAssetResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{2}
}

// Request to start a heavy asset upload
type StartHeavyAssetUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MimeType      string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartHeavyAssetUploadRequest) Reset() {
	*x = StartHeavyAssetUploadRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHeavyAssetUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHeavyAssetUploadRequest) ProtoMessage() {}

func (x *StartHeavyAssetUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHeavyAssetUploadRequest.ProtoReflect.Descriptor instead.
func (*StartHeavyAssetUploadRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{3}
}

func (x *StartHeavyAssetUploadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StartHeavyAssetUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartHeavyAssetUploadRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *StartHeavyAssetUploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Response for starting a heavy asset upload
type StartHeavyAssetUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	ChunkSize     int32                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	ChunksTotal   int32                  `protobuf:"varint,3,opt,name=chunks_total,json=chunksTotal,proto3" json:"chunks_total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartHeavyAssetUploadResponse) Reset() {
	*x = StartHeavyAssetUploadResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartHeavyAssetUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartHeavyAssetUploadResponse) ProtoMessage() {}

func (x *StartHeavyAssetUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartHeavyAssetUploadResponse.ProtoReflect.Descriptor instead.
func (*StartHeavyAssetUploadResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{4}
}

func (x *StartHeavyAssetUploadResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *StartHeavyAssetUploadResponse) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *StartHeavyAssetUploadResponse) GetChunksTotal() int32 {
	if x != nil {
		return x.ChunksTotal
	}
	return 0
}

// Chunk of asset data for streaming
type AssetChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Sequence      uint32                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetChunk) Reset() {
	*x = AssetChunk{}
	mi := &file_asset_v1_asset_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChunk) ProtoMessage() {}

func (x *AssetChunk) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChunk.ProtoReflect.Descriptor instead.
func (*AssetChunk) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{5}
}

func (x *AssetChunk) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *AssetChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AssetChunk) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// Request to stream asset chunks
type StreamAssetChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAssetChunkRequest) Reset() {
	*x = StreamAssetChunkRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAssetChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAssetChunkRequest) ProtoMessage() {}

func (x *StreamAssetChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAssetChunkRequest.ProtoReflect.Descriptor instead.
func (*StreamAssetChunkRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{6}
}

// Response for streaming asset chunks
type StreamAssetChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAssetChunkResponse) Reset() {
	*x = StreamAssetChunkResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAssetChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAssetChunkResponse) ProtoMessage() {}

func (x *StreamAssetChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAssetChunkResponse.ProtoReflect.Descriptor instead.
func (*StreamAssetChunkResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{7}
}

// Request to complete an asset upload
type CompleteAssetUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteAssetUploadRequest) Reset() {
	*x = CompleteAssetUploadRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteAssetUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAssetUploadRequest) ProtoMessage() {}

func (x *CompleteAssetUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAssetUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteAssetUploadRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{8}
}

// Response for completing an asset upload
type CompleteAssetUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteAssetUploadResponse) Reset() {
	*x = CompleteAssetUploadResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteAssetUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAssetUploadResponse) ProtoMessage() {}

func (x *CompleteAssetUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAssetUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteAssetUploadResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{9}
}

// Request to get an asset
type GetAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetRequest) Reset() {
	*x = GetAssetRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetRequest) ProtoMessage() {}

func (x *GetAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetRequest.ProtoReflect.Descriptor instead.
func (*GetAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{10}
}

func (x *GetAssetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response for getting an asset
type GetAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetResponse) Reset() {
	*x = GetAssetResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetResponse) ProtoMessage() {}

func (x *GetAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetResponse.ProtoReflect.Descriptor instead.
func (*GetAssetResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{11}
}

// Request to stream asset content
type StreamAssetContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAssetContentRequest) Reset() {
	*x = StreamAssetContentRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAssetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAssetContentRequest) ProtoMessage() {}

func (x *StreamAssetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAssetContentRequest.ProtoReflect.Descriptor instead.
func (*StreamAssetContentRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{12}
}

// Response for streaming asset content
type StreamAssetContentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAssetContentResponse) Reset() {
	*x = StreamAssetContentResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAssetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAssetContentResponse) ProtoMessage() {}

func (x *StreamAssetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAssetContentResponse.ProtoReflect.Descriptor instead.
func (*StreamAssetContentResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{13}
}

// Request to delete an asset
type DeleteAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssetRequest) Reset() {
	*x = DeleteAssetRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetRequest) ProtoMessage() {}

func (x *DeleteAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{14}
}

// Response for deleting an asset
type DeleteAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssetResponse) Reset() {
	*x = DeleteAssetResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetResponse) ProtoMessage() {}

func (x *DeleteAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssetResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{15}
}

// Request to list user assets
type ListUserAssetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserAssetsRequest) Reset() {
	*x = ListUserAssetsRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAssetsRequest) ProtoMessage() {}

func (x *ListUserAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListUserAssetsRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{16}
}

func (x *ListUserAssetsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserAssetsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserAssetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response for listing user assets
type ListUserAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assets        []*Asset               `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserAssetsResponse) Reset() {
	*x = ListUserAssetsResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserAssetsResponse) ProtoMessage() {}

func (x *ListUserAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListUserAssetsResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{17}
}

func (x *ListUserAssetsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ListUserAssetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to list system assets
type ListSystemAssetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemAssetsRequest) Reset() {
	*x = ListSystemAssetsRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemAssetsRequest) ProtoMessage() {}

func (x *ListSystemAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListSystemAssetsRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{18}
}

func (x *ListSystemAssetsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSystemAssetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response for listing system assets
type ListSystemAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assets        []*Asset               `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSystemAssetsResponse) Reset() {
	*x = ListSystemAssetsResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSystemAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemAssetsResponse) ProtoMessage() {}

func (x *ListSystemAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListSystemAssetsResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{19}
}

func (x *ListSystemAssetsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ListSystemAssetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to subscribe to user asset updates
type SubscribeToUserAssetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToUserAssetsRequest) Reset() {
	*x = SubscribeToUserAssetsRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToUserAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToUserAssetsRequest) ProtoMessage() {}

func (x *SubscribeToUserAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToUserAssetsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToUserAssetsRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{20}
}

// Response for subscribing to user asset updates
type SubscribeToUserAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToUserAssetsResponse) Reset() {
	*x = SubscribeToUserAssetsResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToUserAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToUserAssetsResponse) ProtoMessage() {}

func (x *SubscribeToUserAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToUserAssetsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToUserAssetsResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{21}
}

// Request to subscribe to system asset updates
type SubscribeToSystemAssetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToSystemAssetsRequest) Reset() {
	*x = SubscribeToSystemAssetsRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToSystemAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToSystemAssetsRequest) ProtoMessage() {}

func (x *SubscribeToSystemAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToSystemAssetsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToSystemAssetsRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{22}
}

// Response for subscribing to system asset updates
type SubscribeToSystemAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToSystemAssetsResponse) Reset() {
	*x = SubscribeToSystemAssetsResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToSystemAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToSystemAssetsResponse) ProtoMessage() {}

func (x *SubscribeToSystemAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToSystemAssetsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToSystemAssetsResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{23}
}

// Request to broadcast a system asset
type BroadcastSystemAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastSystemAssetRequest) Reset() {
	*x = BroadcastSystemAssetRequest{}
	mi := &file_asset_v1_asset_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastSystemAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastSystemAssetRequest) ProtoMessage() {}

func (x *BroadcastSystemAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastSystemAssetRequest.ProtoReflect.Descriptor instead.
func (*BroadcastSystemAssetRequest) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{24}
}

// Response for broadcasting a system asset
type BroadcastSystemAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastSystemAssetResponse) Reset() {
	*x = BroadcastSystemAssetResponse{}
	mi := &file_asset_v1_asset_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastSystemAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastSystemAssetResponse) ProtoMessage() {}

func (x *BroadcastSystemAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_asset_v1_asset_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastSystemAssetResponse.ProtoReflect.Descriptor instead.
func (*BroadcastSystemAssetResponse) Descriptor() ([]byte, []int) {
	return file_asset_v1_asset_proto_rawDescGZIP(), []int{25}
}

var File_asset_v1_asset_proto protoreflect.FileDescriptor

const file_asset_v1_asset_proto_rawDesc = "" +
	"\n" +
	"\x14asset/v1/asset.proto\x12\basset.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x92\x03\n" +
	"\x05Asset\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12'\n" +
	"\x04type\x18\x03 \x01(\x0e2\x13.asset.v1.AssetTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x03R\x04size\x12\x12\n" +
	"\x04data\x18\a \x01(\fR\x04data\x12\x10\n" +
	"\x03url\x18\b \x01(\tR\x03url\x12\x1b\n" +
	"\tis_system\x18\t \x01(\bR\bisSystem\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"deleted_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\"\x19\n" +
	"\x17UploadLightAssetRequest\"\x1a\n" +
	"\x18UploadLightAssetResponse\"|\n" +
	"\x1cStartHeavyAssetUploadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tmime_type\x18\x03 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"~\n" +
	"\x1dStartHeavyAssetUploadResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x05R\tchunkSize\x12!\n" +
	"\fchunks_total\x18\x03 \x01(\x05R\vchunksTotal\"Y\n" +
	"\n" +
	"AssetChunk\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\rR\bsequence\"\x19\n" +
	"\x17StreamAssetChunkRequest\"\x1a\n" +
	"\x18StreamAssetChunkResponse\"\x1c\n" +
	"\x1aCompleteAssetUploadRequest\"\x1d\n" +
	"\x1bCompleteAssetUploadResponse\"!\n" +
	"\x0fGetAssetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x12\n" +
	"\x10GetAssetResponse\"\x1b\n" +
	"\x19StreamAssetContentRequest\"\x1c\n" +
	"\x1aStreamAssetContentResponse\"\x14\n" +
	"\x12DeleteAssetRequest\"\x15\n" +
	"\x13DeleteAssetResponse\"l\n" +
	"\x15ListUserAssetsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"i\n" +
	"\x16ListUserAssetsResponse\x12'\n" +
	"\x06assets\x18\x01 \x03(\v2\x0f.asset.v1.AssetR\x06assets\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"U\n" +
	"\x17ListSystemAssetsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"k\n" +
	"\x18ListSystemAssetsResponse\x12'\n" +
	"\x06assets\x18\x01 \x03(\v2\x0f.asset.v1.AssetR\x06assets\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x1e\n" +
	"\x1cSubscribeToUserAssetsRequest\"\x1f\n" +
	"\x1dSubscribeToUserAssetsResponse\" \n" +
	"\x1eSubscribeToSystemAssetsRequest\"!\n" +
	"\x1fSubscribeToSystemAssetsResponse\"\x1d\n" +
	"\x1bBroadcastSystemAssetRequest\"\x1e\n" +
	"\x1cBroadcastSystemAssetResponse*S\n" +
	"\tAssetType\x12\x1a\n" +
	"\x16ASSET_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10ASSET_TYPE_LIGHT\x10\x01\x12\x14\n" +
	"\x10ASSET_TYPE_HEAVY\x10\x022\xf3\b\n" +
	"\fAssetService\x12Y\n" +
	"\x10UploadLightAsset\x12!.asset.v1.UploadLightAssetRequest\x1a\".asset.v1.UploadLightAssetResponse\x12h\n" +
	"\x15StartHeavyAssetUpload\x12&.asset.v1.StartHeavyAssetUploadRequest\x1a'.asset.v1.StartHeavyAssetUploadResponse\x12Y\n" +
	"\x10StreamAssetChunk\x12!.asset.v1.StreamAssetChunkRequest\x1a\".asset.v1.StreamAssetChunkResponse\x12b\n" +
	"\x13CompleteAssetUpload\x12$.asset.v1.CompleteAssetUploadRequest\x1a%.asset.v1.CompleteAssetUploadResponse\x12A\n" +
	"\bGetAsset\x12\x19.asset.v1.GetAssetRequest\x1a\x1a.asset.v1.GetAssetResponse\x12_\n" +
	"\x12StreamAssetContent\x12#.asset.v1.StreamAssetContentRequest\x1a$.asset.v1.StreamAssetContentResponse\x12J\n" +
	"\vDeleteAsset\x12\x1c.asset.v1.DeleteAssetRequest\x1a\x1d.asset.v1.DeleteAssetResponse\x12S\n" +
	"\x0eListUserAssets\x12\x1f.asset.v1.ListUserAssetsRequest\x1a .asset.v1.ListUserAssetsResponse\x12Y\n" +
	"\x10ListSystemAssets\x12!.asset.v1.ListSystemAssetsRequest\x1a\".asset.v1.ListSystemAssetsResponse\x12h\n" +
	"\x15SubscribeToUserAssets\x12&.asset.v1.SubscribeToUserAssetsRequest\x1a'.asset.v1.SubscribeToUserAssetsResponse\x12n\n" +
	"\x17SubscribeToSystemAssets\x12(.asset.v1.SubscribeToSystemAssetsRequest\x1a).asset.v1.SubscribeToSystemAssetsResponse\x12e\n" +
	"\x14BroadcastSystemAsset\x12%.asset.v1.BroadcastSystemAssetRequest\x1a&.asset.v1.BroadcastSystemAssetResponseB,Z*master-ovasabi/api/protos/asset/v0;assetv0b\x06proto3"

var (
	file_asset_v1_asset_proto_rawDescOnce sync.Once
	file_asset_v1_asset_proto_rawDescData []byte
)

func file_asset_v1_asset_proto_rawDescGZIP() []byte {
	file_asset_v1_asset_proto_rawDescOnce.Do(func() {
		file_asset_v1_asset_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_asset_v1_asset_proto_rawDesc), len(file_asset_v1_asset_proto_rawDesc)))
	})
	return file_asset_v1_asset_proto_rawDescData
}

var file_asset_v1_asset_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_asset_v1_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_asset_v1_asset_proto_goTypes = []any{
	(AssetType)(0),                          // 0: asset.v1.AssetType
	(*Asset)(nil),                           // 1: asset.v1.Asset
	(*UploadLightAssetRequest)(nil),         // 2: asset.v1.UploadLightAssetRequest
	(*UploadLightAssetResponse)(nil),        // 3: asset.v1.UploadLightAssetResponse
	(*StartHeavyAssetUploadRequest)(nil),    // 4: asset.v1.StartHeavyAssetUploadRequest
	(*StartHeavyAssetUploadResponse)(nil),   // 5: asset.v1.StartHeavyAssetUploadResponse
	(*AssetChunk)(nil),                      // 6: asset.v1.AssetChunk
	(*StreamAssetChunkRequest)(nil),         // 7: asset.v1.StreamAssetChunkRequest
	(*StreamAssetChunkResponse)(nil),        // 8: asset.v1.StreamAssetChunkResponse
	(*CompleteAssetUploadRequest)(nil),      // 9: asset.v1.CompleteAssetUploadRequest
	(*CompleteAssetUploadResponse)(nil),     // 10: asset.v1.CompleteAssetUploadResponse
	(*GetAssetRequest)(nil),                 // 11: asset.v1.GetAssetRequest
	(*GetAssetResponse)(nil),                // 12: asset.v1.GetAssetResponse
	(*StreamAssetContentRequest)(nil),       // 13: asset.v1.StreamAssetContentRequest
	(*StreamAssetContentResponse)(nil),      // 14: asset.v1.StreamAssetContentResponse
	(*DeleteAssetRequest)(nil),              // 15: asset.v1.DeleteAssetRequest
	(*DeleteAssetResponse)(nil),             // 16: asset.v1.DeleteAssetResponse
	(*ListUserAssetsRequest)(nil),           // 17: asset.v1.ListUserAssetsRequest
	(*ListUserAssetsResponse)(nil),          // 18: asset.v1.ListUserAssetsResponse
	(*ListSystemAssetsRequest)(nil),         // 19: asset.v1.ListSystemAssetsRequest
	(*ListSystemAssetsResponse)(nil),        // 20: asset.v1.ListSystemAssetsResponse
	(*SubscribeToUserAssetsRequest)(nil),    // 21: asset.v1.SubscribeToUserAssetsRequest
	(*SubscribeToUserAssetsResponse)(nil),   // 22: asset.v1.SubscribeToUserAssetsResponse
	(*SubscribeToSystemAssetsRequest)(nil),  // 23: asset.v1.SubscribeToSystemAssetsRequest
	(*SubscribeToSystemAssetsResponse)(nil), // 24: asset.v1.SubscribeToSystemAssetsResponse
	(*BroadcastSystemAssetRequest)(nil),     // 25: asset.v1.BroadcastSystemAssetRequest
	(*BroadcastSystemAssetResponse)(nil),    // 26: asset.v1.BroadcastSystemAssetResponse
	(*timestamppb.Timestamp)(nil),           // 27: google.protobuf.Timestamp
}
var file_asset_v1_asset_proto_depIdxs = []int32{
	0,  // 0: asset.v1.Asset.type:type_name -> asset.v1.AssetType
	27, // 1: asset.v1.Asset.created_at:type_name -> google.protobuf.Timestamp
	27, // 2: asset.v1.Asset.updated_at:type_name -> google.protobuf.Timestamp
	27, // 3: asset.v1.Asset.deleted_at:type_name -> google.protobuf.Timestamp
	1,  // 4: asset.v1.ListUserAssetsResponse.assets:type_name -> asset.v1.Asset
	1,  // 5: asset.v1.ListSystemAssetsResponse.assets:type_name -> asset.v1.Asset
	2,  // 6: asset.v1.AssetService.UploadLightAsset:input_type -> asset.v1.UploadLightAssetRequest
	4,  // 7: asset.v1.AssetService.StartHeavyAssetUpload:input_type -> asset.v1.StartHeavyAssetUploadRequest
	7,  // 8: asset.v1.AssetService.StreamAssetChunk:input_type -> asset.v1.StreamAssetChunkRequest
	9,  // 9: asset.v1.AssetService.CompleteAssetUpload:input_type -> asset.v1.CompleteAssetUploadRequest
	11, // 10: asset.v1.AssetService.GetAsset:input_type -> asset.v1.GetAssetRequest
	13, // 11: asset.v1.AssetService.StreamAssetContent:input_type -> asset.v1.StreamAssetContentRequest
	15, // 12: asset.v1.AssetService.DeleteAsset:input_type -> asset.v1.DeleteAssetRequest
	17, // 13: asset.v1.AssetService.ListUserAssets:input_type -> asset.v1.ListUserAssetsRequest
	19, // 14: asset.v1.AssetService.ListSystemAssets:input_type -> asset.v1.ListSystemAssetsRequest
	21, // 15: asset.v1.AssetService.SubscribeToUserAssets:input_type -> asset.v1.SubscribeToUserAssetsRequest
	23, // 16: asset.v1.AssetService.SubscribeToSystemAssets:input_type -> asset.v1.SubscribeToSystemAssetsRequest
	25, // 17: asset.v1.AssetService.BroadcastSystemAsset:input_type -> asset.v1.BroadcastSystemAssetRequest
	3,  // 18: asset.v1.AssetService.UploadLightAsset:output_type -> asset.v1.UploadLightAssetResponse
	5,  // 19: asset.v1.AssetService.StartHeavyAssetUpload:output_type -> asset.v1.StartHeavyAssetUploadResponse
	8,  // 20: asset.v1.AssetService.StreamAssetChunk:output_type -> asset.v1.StreamAssetChunkResponse
	10, // 21: asset.v1.AssetService.CompleteAssetUpload:output_type -> asset.v1.CompleteAssetUploadResponse
	12, // 22: asset.v1.AssetService.GetAsset:output_type -> asset.v1.GetAssetResponse
	14, // 23: asset.v1.AssetService.StreamAssetContent:output_type -> asset.v1.StreamAssetContentResponse
	16, // 24: asset.v1.AssetService.DeleteAsset:output_type -> asset.v1.DeleteAssetResponse
	18, // 25: asset.v1.AssetService.ListUserAssets:output_type -> asset.v1.ListUserAssetsResponse
	20, // 26: asset.v1.AssetService.ListSystemAssets:output_type -> asset.v1.ListSystemAssetsResponse
	22, // 27: asset.v1.AssetService.SubscribeToUserAssets:output_type -> asset.v1.SubscribeToUserAssetsResponse
	24, // 28: asset.v1.AssetService.SubscribeToSystemAssets:output_type -> asset.v1.SubscribeToSystemAssetsResponse
	26, // 29: asset.v1.AssetService.BroadcastSystemAsset:output_type -> asset.v1.BroadcastSystemAssetResponse
	18, // [18:30] is the sub-list for method output_type
	6,  // [6:18] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_asset_v1_asset_proto_init() }
func file_asset_v1_asset_proto_init() {
	if File_asset_v1_asset_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_asset_v1_asset_proto_rawDesc), len(file_asset_v1_asset_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_asset_v1_asset_proto_goTypes,
		DependencyIndexes: file_asset_v1_asset_proto_depIdxs,
		EnumInfos:         file_asset_v1_asset_proto_enumTypes,
		MessageInfos:      file_asset_v1_asset_proto_msgTypes,
	}.Build()
	File_asset_v1_asset_proto = out.File
	file_asset_v1_asset_proto_goTypes = nil
	file_asset_v1_asset_proto_depIdxs = nil
}
