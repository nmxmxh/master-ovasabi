// Universal compute schema for device-agnostic distributed execution
// Fits Nexus event bus using common.Payload and common.Metadata

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: common/v1/compute.proto

package commonpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataRef represents an input/output datum.
type DataRef struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContentType string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // e.g. application/json, application/octet-stream
	// Types that are valid to be assigned to Body:
	//
	//	*DataRef_InlineBytes
	//	*DataRef_InlineJson
	//	*DataRef_Uri
	Body          isDataRef_Body    `protobuf_oneof:"body"`
	Annotations   map[string]string `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // checksum, shape, dtype, layout, etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataRef) Reset() {
	*x = DataRef{}
	mi := &file_common_v1_compute_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRef) ProtoMessage() {}

func (x *DataRef) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRef.ProtoReflect.Descriptor instead.
func (*DataRef) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{0}
}

func (x *DataRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataRef) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *DataRef) GetBody() isDataRef_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *DataRef) GetInlineBytes() []byte {
	if x != nil {
		if x, ok := x.Body.(*DataRef_InlineBytes); ok {
			return x.InlineBytes
		}
	}
	return nil
}

func (x *DataRef) GetInlineJson() *structpb.Struct {
	if x != nil {
		if x, ok := x.Body.(*DataRef_InlineJson); ok {
			return x.InlineJson
		}
	}
	return nil
}

func (x *DataRef) GetUri() string {
	if x != nil {
		if x, ok := x.Body.(*DataRef_Uri); ok {
			return x.Uri
		}
	}
	return ""
}

func (x *DataRef) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type isDataRef_Body interface {
	isDataRef_Body()
}

type DataRef_InlineBytes struct {
	InlineBytes []byte `protobuf:"bytes,3,opt,name=inline_bytes,json=inlineBytes,proto3,oneof"`
}

type DataRef_InlineJson struct {
	InlineJson *structpb.Struct `protobuf:"bytes,4,opt,name=inline_json,json=inlineJson,proto3,oneof"`
}

type DataRef_Uri struct {
	Uri string `protobuf:"bytes,5,opt,name=uri,proto3,oneof"` // s3://, https://, ipfs://, file://wasi/...
}

func (*DataRef_InlineBytes) isDataRef_Body() {}

func (*DataRef_InlineJson) isDataRef_Body() {}

func (*DataRef_Uri) isDataRef_Body() {}

// TensorSpec describes tensor metadata for validation and placement.
type TensorSpec struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Dtype         string                   `protobuf:"bytes,1,opt,name=dtype,proto3" json:"dtype,omitempty"`                             // f16,f32,i8,u8,bf16,...
	Shapes        []int64                  `protobuf:"varint,2,rep,packed,name=shapes,proto3" json:"shapes,omitempty"`                   // e.g. [1,3,224,224]
	Layout        string                   `protobuf:"bytes,3,opt,name=layout,proto3" json:"layout,omitempty"`                           // NCHW, NHWC, CHW, HWC
	DeviceHint    string                   `protobuf:"bytes,4,opt,name=device_hint,json=deviceHint,proto3" json:"device_hint,omitempty"` // cpu or gpu
	Quant         *TensorSpec_Quantization `protobuf:"bytes,5,opt,name=quant,proto3" json:"quant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TensorSpec) Reset() {
	*x = TensorSpec{}
	mi := &file_common_v1_compute_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TensorSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorSpec) ProtoMessage() {}

func (x *TensorSpec) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorSpec.ProtoReflect.Descriptor instead.
func (*TensorSpec) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{1}
}

func (x *TensorSpec) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

func (x *TensorSpec) GetShapes() []int64 {
	if x != nil {
		return x.Shapes
	}
	return nil
}

func (x *TensorSpec) GetLayout() string {
	if x != nil {
		return x.Layout
	}
	return ""
}

func (x *TensorSpec) GetDeviceHint() string {
	if x != nil {
		return x.DeviceHint
	}
	return ""
}

func (x *TensorSpec) GetQuant() *TensorSpec_Quantization {
	if x != nil {
		return x.Quant
	}
	return nil
}

// BufferSpec describes low-level buffer constraints.
type BufferSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ByteLength    uint64                 `protobuf:"varint,1,opt,name=byte_length,json=byteLength,proto3" json:"byte_length,omitempty"`
	Stride        uint32                 `protobuf:"varint,2,opt,name=stride,proto3" json:"stride,omitempty"`
	Offset        uint32                 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Alignment     uint32                 `protobuf:"varint,4,opt,name=alignment,proto3" json:"alignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BufferSpec) Reset() {
	*x = BufferSpec{}
	mi := &file_common_v1_compute_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufferSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferSpec) ProtoMessage() {}

func (x *BufferSpec) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferSpec.ProtoReflect.Descriptor instead.
func (*BufferSpec) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{2}
}

func (x *BufferSpec) GetByteLength() uint64 {
	if x != nil {
		return x.ByteLength
	}
	return 0
}

func (x *BufferSpec) GetStride() uint32 {
	if x != nil {
		return x.Stride
	}
	return 0
}

func (x *BufferSpec) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BufferSpec) GetAlignment() uint32 {
	if x != nil {
		return x.Alignment
	}
	return 0
}

// GPUDescriptor captures GPU/backend information across environments.
type GPUDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Backend       string                 `protobuf:"bytes,1,opt,name=backend,proto3" json:"backend,omitempty"` // webgpu|cuda|metal|vulkan|directml|rocm
	Vendor        string                 `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`   // nvidia|amd|intel|apple|qualcomm|arm|unknown
	AdapterName   string                 `protobuf:"bytes,3,opt,name=adapter_name,json=adapterName,proto3" json:"adapter_name,omitempty"`
	AdapterUuid   string                 `protobuf:"bytes,4,opt,name=adapter_uuid,json=adapterUuid,proto3" json:"adapter_uuid,omitempty"`
	Features      []string               `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"`                                                                        // shader_f16, subgroup, timestamp_query, storage_64...
	Limits        map[string]uint64      `protobuf:"bytes,6,rep,name=limits,proto3" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // maxThreadsPerGroup, maxBufferSize, maxBindGroups...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GPUDescriptor) Reset() {
	*x = GPUDescriptor{}
	mi := &file_common_v1_compute_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPUDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUDescriptor) ProtoMessage() {}

func (x *GPUDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUDescriptor.ProtoReflect.Descriptor instead.
func (*GPUDescriptor) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{3}
}

func (x *GPUDescriptor) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *GPUDescriptor) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *GPUDescriptor) GetAdapterName() string {
	if x != nil {
		return x.AdapterName
	}
	return ""
}

func (x *GPUDescriptor) GetAdapterUuid() string {
	if x != nil {
		return x.AdapterUuid
	}
	return ""
}

func (x *GPUDescriptor) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GPUDescriptor) GetLimits() map[string]uint64 {
	if x != nil {
		return x.Limits
	}
	return nil
}

// Capability advertises a worker's abilities and resources.
type Capability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wasm          bool                   `protobuf:"varint,1,opt,name=wasm,proto3" json:"wasm,omitempty"`
	Threads       bool                   `protobuf:"varint,2,opt,name=threads,proto3" json:"threads,omitempty"`
	Simd          bool                   `protobuf:"varint,3,opt,name=simd,proto3" json:"simd,omitempty"`
	Webgpu        bool                   `protobuf:"varint,4,opt,name=webgpu,proto3" json:"webgpu,omitempty"`
	CpuCores      uint32                 `protobuf:"varint,5,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`
	MemoryMb      uint32                 `protobuf:"varint,6,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Gpu           *GPUDescriptor         `protobuf:"bytes,7,opt,name=gpu,proto3" json:"gpu,omitempty"`                                                                                         // optional
	Labels        []string               `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty"`                                                                                   // camera, low-power, 5g, wifi
	Attributes    map[string]string      `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // os, arch, browser, driver_version...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Capability) Reset() {
	*x = Capability{}
	mi := &file_common_v1_compute_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capability) ProtoMessage() {}

func (x *Capability) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capability.ProtoReflect.Descriptor instead.
func (*Capability) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{4}
}

func (x *Capability) GetWasm() bool {
	if x != nil {
		return x.Wasm
	}
	return false
}

func (x *Capability) GetThreads() bool {
	if x != nil {
		return x.Threads
	}
	return false
}

func (x *Capability) GetSimd() bool {
	if x != nil {
		return x.Simd
	}
	return false
}

func (x *Capability) GetWebgpu() bool {
	if x != nil {
		return x.Webgpu
	}
	return false
}

func (x *Capability) GetCpuCores() uint32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *Capability) GetMemoryMb() uint32 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *Capability) GetGpu() *GPUDescriptor {
	if x != nil {
		return x.Gpu
	}
	return nil
}

func (x *Capability) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Capability) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Requirements expresses hard and soft constraints.
type Requirements struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           *Capability            `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`                                                                                     // must-have
	Preferred     *Capability            `protobuf:"bytes,2,opt,name=preferred,proto3" json:"preferred,omitempty"`                                                                         // nice-to-have
	Qos           map[string]string      `protobuf:"bytes,3,rep,name=qos,proto3" json:"qos,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`           // priority, deadline_ms, retries, preemptible, budget_ms
	Isolation     string                 `protobuf:"bytes,4,opt,name=isolation,proto3" json:"isolation,omitempty"`                                                                         // sandbox|trusted|exclusive
	Locality      map[string]string      `protobuf:"bytes,5,rep,name=locality,proto3" json:"locality,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // region, az, affinity labels
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Requirements) Reset() {
	*x = Requirements{}
	mi := &file_common_v1_compute_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Requirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requirements) ProtoMessage() {}

func (x *Requirements) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requirements.ProtoReflect.Descriptor instead.
func (*Requirements) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{5}
}

func (x *Requirements) GetMin() *Capability {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *Requirements) GetPreferred() *Capability {
	if x != nil {
		return x.Preferred
	}
	return nil
}

func (x *Requirements) GetQos() map[string]string {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Requirements) GetIsolation() string {
	if x != nil {
		return x.Isolation
	}
	return ""
}

func (x *Requirements) GetLocality() map[string]string {
	if x != nil {
		return x.Locality
	}
	return nil
}

// ModuleSpec defines how to locate and invoke the module.
type ModuleSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Kind            string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`   // wasm|builtin|container
	Uri             string                 `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`     // module location (for wasm/container)
	Hash            string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`   // sha256 or similar for integrity
	Entry           string                 `protobuf:"bytes,4,opt,name=entry,proto3" json:"entry,omitempty"` // function name e.g. runGPUCompute
	ExpectedInputs  []*TensorSpec          `protobuf:"bytes,5,rep,name=expected_inputs,json=expectedInputs,proto3" json:"expected_inputs,omitempty"`
	ExpectedOutputs []*TensorSpec          `protobuf:"bytes,6,rep,name=expected_outputs,json=expectedOutputs,proto3" json:"expected_outputs,omitempty"`
	Params          map[string]string      `protobuf:"bytes,7,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`           // hyperparameters
	Permissions     map[string]string      `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // wasi_fs, net, gpu_access, memory_limit_mb
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ModuleSpec) Reset() {
	*x = ModuleSpec{}
	mi := &file_common_v1_compute_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleSpec) ProtoMessage() {}

func (x *ModuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleSpec.ProtoReflect.Descriptor instead.
func (*ModuleSpec) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{6}
}

func (x *ModuleSpec) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ModuleSpec) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ModuleSpec) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ModuleSpec) GetEntry() string {
	if x != nil {
		return x.Entry
	}
	return ""
}

func (x *ModuleSpec) GetExpectedInputs() []*TensorSpec {
	if x != nil {
		return x.ExpectedInputs
	}
	return nil
}

func (x *ModuleSpec) GetExpectedOutputs() []*TensorSpec {
	if x != nil {
		return x.ExpectedOutputs
	}
	return nil
}

func (x *ModuleSpec) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ModuleSpec) GetPermissions() map[string]string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// ComputeEnvelope is the task definition carried over the event bus.
type ComputeEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Op            string                 `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`           // logical operation id
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"` // semver of op
	Module        *ModuleSpec            `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`
	Requirements  *Requirements          `protobuf:"bytes,5,opt,name=requirements,proto3" json:"requirements,omitempty"`
	Inputs        []*DataRef             `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Params        map[string]string      `protobuf:"bytes,7,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ReturnChannel string                 `protobuf:"bytes,8,opt,name=return_channel,json=returnChannel,proto3" json:"return_channel,omitempty"`                                            // event type/topic for results
	Security      map[string]string      `protobuf:"bytes,9,rep,name=security,proto3" json:"security,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // task_token, signature, requester_id
	// carry timing hints
	NotBefore     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=deadline,proto3" json:"deadline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeEnvelope) Reset() {
	*x = ComputeEnvelope{}
	mi := &file_common_v1_compute_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeEnvelope) ProtoMessage() {}

func (x *ComputeEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeEnvelope.ProtoReflect.Descriptor instead.
func (*ComputeEnvelope) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{7}
}

func (x *ComputeEnvelope) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ComputeEnvelope) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *ComputeEnvelope) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ComputeEnvelope) GetModule() *ModuleSpec {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *ComputeEnvelope) GetRequirements() *Requirements {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *ComputeEnvelope) GetInputs() []*DataRef {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ComputeEnvelope) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ComputeEnvelope) GetReturnChannel() string {
	if x != nil {
		return x.ReturnChannel
	}
	return ""
}

func (x *ComputeEnvelope) GetSecurity() map[string]string {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *ComputeEnvelope) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *ComputeEnvelope) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

// Claim emitted by a worker or used in assignment acknowledgement.
type ComputeClaim struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkerId      string                 `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Capabilities  *Capability            `protobuf:"bytes,3,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeClaim) Reset() {
	*x = ComputeClaim{}
	mi := &file_common_v1_compute_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeClaim) ProtoMessage() {}

func (x *ComputeClaim) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeClaim.ProtoReflect.Descriptor instead.
func (*ComputeClaim) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{8}
}

func (x *ComputeClaim) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ComputeClaim) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *ComputeClaim) GetCapabilities() *Capability {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// Assignment confirms scheduler routing.
type ComputeAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorkerId      string                 `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeAssignment) Reset() {
	*x = ComputeAssignment{}
	mi := &file_common_v1_compute_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeAssignment) ProtoMessage() {}

func (x *ComputeAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeAssignment.ProtoReflect.Descriptor instead.
func (*ComputeAssignment) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{9}
}

func (x *ComputeAssignment) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ComputeAssignment) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *ComputeAssignment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Progress updates with optional metrics.
type ComputeProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Pct           uint32                 `protobuf:"varint,2,opt,name=pct,proto3" json:"pct,omitempty"` // 0..100
	Note          string                 `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	Metrics       map[string]string      `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // throughput, tokens_s, tf_ops, mem_used_mb
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeProgress) Reset() {
	*x = ComputeProgress{}
	mi := &file_common_v1_compute_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeProgress) ProtoMessage() {}

func (x *ComputeProgress) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeProgress.ProtoReflect.Descriptor instead.
func (*ComputeProgress) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{10}
}

func (x *ComputeProgress) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ComputeProgress) GetPct() uint32 {
	if x != nil {
		return x.Pct
	}
	return 0
}

func (x *ComputeProgress) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ComputeProgress) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Result carries outputs and a brief summary for indexing.
type ComputeResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Outputs       []*DataRef             `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Summary       map[string]string      `protobuf:"bytes,3,rep,name=summary,proto3" json:"summary,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // quick, queryable fields
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeResult) Reset() {
	*x = ComputeResult{}
	mi := &file_common_v1_compute_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResult) ProtoMessage() {}

func (x *ComputeResult) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResult.ProtoReflect.Descriptor instead.
func (*ComputeResult) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{11}
}

func (x *ComputeResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ComputeResult) GetOutputs() []*DataRef {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ComputeResult) GetSummary() map[string]string {
	if x != nil {
		return x.Summary
	}
	return nil
}

// Failure describes terminal errors.
type ComputeFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeFailure) Reset() {
	*x = ComputeFailure{}
	mi := &file_common_v1_compute_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeFailure) ProtoMessage() {}

func (x *ComputeFailure) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeFailure.ProtoReflect.Descriptor instead.
func (*ComputeFailure) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{12}
}

func (x *ComputeFailure) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ComputeFailure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ComputeFailure) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

// Optional quantization parameters
type TensorSpec_Quantization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scale         float64                `protobuf:"fixed64,1,opt,name=scale,proto3" json:"scale,omitempty"`
	ZeroPoint     int64                  `protobuf:"varint,2,opt,name=zero_point,json=zeroPoint,proto3" json:"zero_point,omitempty"`
	Scheme        string                 `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"` // per_tensor, per_channel
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TensorSpec_Quantization) Reset() {
	*x = TensorSpec_Quantization{}
	mi := &file_common_v1_compute_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TensorSpec_Quantization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TensorSpec_Quantization) ProtoMessage() {}

func (x *TensorSpec_Quantization) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_compute_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TensorSpec_Quantization.ProtoReflect.Descriptor instead.
func (*TensorSpec_Quantization) Descriptor() ([]byte, []int) {
	return file_common_v1_compute_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TensorSpec_Quantization) GetScale() float64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *TensorSpec_Quantization) GetZeroPoint() int64 {
	if x != nil {
		return x.ZeroPoint
	}
	return 0
}

func (x *TensorSpec_Quantization) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

var File_common_v1_compute_proto protoreflect.FileDescriptor

const file_common_v1_compute_proto_rawDesc = "" +
	"\n" +
	"\x17common/v1/compute.proto\x12\tcommon.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc4\x02\n" +
	"\aDataRef\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12#\n" +
	"\finline_bytes\x18\x03 \x01(\fH\x00R\vinlineBytes\x12:\n" +
	"\vinline_json\x18\x04 \x01(\v2\x17.google.protobuf.StructH\x00R\n" +
	"inlineJson\x12\x12\n" +
	"\x03uri\x18\x05 \x01(\tH\x00R\x03uri\x12E\n" +
	"\vannotations\x18\x06 \x03(\v2#.common.v1.DataRef.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x06\n" +
	"\x04body\"\x8a\x02\n" +
	"\n" +
	"TensorSpec\x12\x14\n" +
	"\x05dtype\x18\x01 \x01(\tR\x05dtype\x12\x16\n" +
	"\x06shapes\x18\x02 \x03(\x03R\x06shapes\x12\x16\n" +
	"\x06layout\x18\x03 \x01(\tR\x06layout\x12\x1f\n" +
	"\vdevice_hint\x18\x04 \x01(\tR\n" +
	"deviceHint\x128\n" +
	"\x05quant\x18\x05 \x01(\v2\".common.v1.TensorSpec.QuantizationR\x05quant\x1a[\n" +
	"\fQuantization\x12\x14\n" +
	"\x05scale\x18\x01 \x01(\x01R\x05scale\x12\x1d\n" +
	"\n" +
	"zero_point\x18\x02 \x01(\x03R\tzeroPoint\x12\x16\n" +
	"\x06scheme\x18\x03 \x01(\tR\x06scheme\"{\n" +
	"\n" +
	"BufferSpec\x12\x1f\n" +
	"\vbyte_length\x18\x01 \x01(\x04R\n" +
	"byteLength\x12\x16\n" +
	"\x06stride\x18\x02 \x01(\rR\x06stride\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\rR\x06offset\x12\x1c\n" +
	"\talignment\x18\x04 \x01(\rR\talignment\"\x9c\x02\n" +
	"\rGPUDescriptor\x12\x18\n" +
	"\abackend\x18\x01 \x01(\tR\abackend\x12\x16\n" +
	"\x06vendor\x18\x02 \x01(\tR\x06vendor\x12!\n" +
	"\fadapter_name\x18\x03 \x01(\tR\vadapterName\x12!\n" +
	"\fadapter_uuid\x18\x04 \x01(\tR\vadapterUuid\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeatures\x12<\n" +
	"\x06limits\x18\x06 \x03(\v2$.common.v1.GPUDescriptor.LimitsEntryR\x06limits\x1a9\n" +
	"\vLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xea\x02\n" +
	"\n" +
	"Capability\x12\x12\n" +
	"\x04wasm\x18\x01 \x01(\bR\x04wasm\x12\x18\n" +
	"\athreads\x18\x02 \x01(\bR\athreads\x12\x12\n" +
	"\x04simd\x18\x03 \x01(\bR\x04simd\x12\x16\n" +
	"\x06webgpu\x18\x04 \x01(\bR\x06webgpu\x12\x1b\n" +
	"\tcpu_cores\x18\x05 \x01(\rR\bcpuCores\x12\x1b\n" +
	"\tmemory_mb\x18\x06 \x01(\rR\bmemoryMb\x12*\n" +
	"\x03gpu\x18\a \x01(\v2\x18.common.v1.GPUDescriptorR\x03gpu\x12\x16\n" +
	"\x06labels\x18\b \x03(\tR\x06labels\x12E\n" +
	"\n" +
	"attributes\x18\t \x03(\v2%.common.v1.Capability.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf6\x02\n" +
	"\fRequirements\x12'\n" +
	"\x03min\x18\x01 \x01(\v2\x15.common.v1.CapabilityR\x03min\x123\n" +
	"\tpreferred\x18\x02 \x01(\v2\x15.common.v1.CapabilityR\tpreferred\x122\n" +
	"\x03qos\x18\x03 \x03(\v2 .common.v1.Requirements.QosEntryR\x03qos\x12\x1c\n" +
	"\tisolation\x18\x04 \x01(\tR\tisolation\x12A\n" +
	"\blocality\x18\x05 \x03(\v2%.common.v1.Requirements.LocalityEntryR\blocality\x1a6\n" +
	"\bQosEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rLocalityEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x03\n" +
	"\n" +
	"ModuleSpec\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\tR\x04hash\x12\x14\n" +
	"\x05entry\x18\x04 \x01(\tR\x05entry\x12>\n" +
	"\x0fexpected_inputs\x18\x05 \x03(\v2\x15.common.v1.TensorSpecR\x0eexpectedInputs\x12@\n" +
	"\x10expected_outputs\x18\x06 \x03(\v2\x15.common.v1.TensorSpecR\x0fexpectedOutputs\x129\n" +
	"\x06params\x18\a \x03(\v2!.common.v1.ModuleSpec.ParamsEntryR\x06params\x12H\n" +
	"\vpermissions\x18\b \x03(\v2&.common.v1.ModuleSpec.PermissionsEntryR\vpermissions\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10PermissionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x05\n" +
	"\x0fComputeEnvelope\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x0e\n" +
	"\x02op\x18\x02 \x01(\tR\x02op\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12-\n" +
	"\x06module\x18\x04 \x01(\v2\x15.common.v1.ModuleSpecR\x06module\x12;\n" +
	"\frequirements\x18\x05 \x01(\v2\x17.common.v1.RequirementsR\frequirements\x12*\n" +
	"\x06inputs\x18\x06 \x03(\v2\x12.common.v1.DataRefR\x06inputs\x12>\n" +
	"\x06params\x18\a \x03(\v2&.common.v1.ComputeEnvelope.ParamsEntryR\x06params\x12%\n" +
	"\x0ereturn_channel\x18\b \x01(\tR\rreturnChannel\x12D\n" +
	"\bsecurity\x18\t \x03(\v2(.common.v1.ComputeEnvelope.SecurityEntryR\bsecurity\x129\n" +
	"\n" +
	"not_before\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tnotBefore\x126\n" +
	"\bdeadline\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\bdeadline\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rSecurityEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\fComputeClaim\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\tworker_id\x18\x02 \x01(\tR\bworkerId\x129\n" +
	"\fcapabilities\x18\x03 \x01(\v2\x15.common.v1.CapabilityR\fcapabilities\"\xce\x01\n" +
	"\x11ComputeAssignment\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\tworker_id\x18\x02 \x01(\tR\bworkerId\x12F\n" +
	"\bmetadata\x18\x03 \x03(\v2*.common.v1.ComputeAssignment.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcf\x01\n" +
	"\x0fComputeProgress\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x10\n" +
	"\x03pct\x18\x02 \x01(\rR\x03pct\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\x12A\n" +
	"\ametrics\x18\x04 \x03(\v2'.common.v1.ComputeProgress.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x01\n" +
	"\rComputeResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12,\n" +
	"\aoutputs\x18\x02 \x03(\v2\x12.common.v1.DataRefR\aoutputs\x12?\n" +
	"\asummary\x18\x03 \x03(\v2%.common.v1.ComputeResult.SummaryEntryR\asummary\x1a:\n" +
	"\fSummaryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\x01\n" +
	"\x0eComputeFailure\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12@\n" +
	"\adetails\x18\x03 \x03(\v2&.common.v1.ComputeFailure.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B@Z>github.com/nmxmxh/master-ovasabi/api/protos/common/v1;commonpbb\x06proto3"

var (
	file_common_v1_compute_proto_rawDescOnce sync.Once
	file_common_v1_compute_proto_rawDescData []byte
)

func file_common_v1_compute_proto_rawDescGZIP() []byte {
	file_common_v1_compute_proto_rawDescOnce.Do(func() {
		file_common_v1_compute_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_v1_compute_proto_rawDesc), len(file_common_v1_compute_proto_rawDesc)))
	})
	return file_common_v1_compute_proto_rawDescData
}

var file_common_v1_compute_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_common_v1_compute_proto_goTypes = []any{
	(*DataRef)(nil),                 // 0: common.v1.DataRef
	(*TensorSpec)(nil),              // 1: common.v1.TensorSpec
	(*BufferSpec)(nil),              // 2: common.v1.BufferSpec
	(*GPUDescriptor)(nil),           // 3: common.v1.GPUDescriptor
	(*Capability)(nil),              // 4: common.v1.Capability
	(*Requirements)(nil),            // 5: common.v1.Requirements
	(*ModuleSpec)(nil),              // 6: common.v1.ModuleSpec
	(*ComputeEnvelope)(nil),         // 7: common.v1.ComputeEnvelope
	(*ComputeClaim)(nil),            // 8: common.v1.ComputeClaim
	(*ComputeAssignment)(nil),       // 9: common.v1.ComputeAssignment
	(*ComputeProgress)(nil),         // 10: common.v1.ComputeProgress
	(*ComputeResult)(nil),           // 11: common.v1.ComputeResult
	(*ComputeFailure)(nil),          // 12: common.v1.ComputeFailure
	nil,                             // 13: common.v1.DataRef.AnnotationsEntry
	(*TensorSpec_Quantization)(nil), // 14: common.v1.TensorSpec.Quantization
	nil,                             // 15: common.v1.GPUDescriptor.LimitsEntry
	nil,                             // 16: common.v1.Capability.AttributesEntry
	nil,                             // 17: common.v1.Requirements.QosEntry
	nil,                             // 18: common.v1.Requirements.LocalityEntry
	nil,                             // 19: common.v1.ModuleSpec.ParamsEntry
	nil,                             // 20: common.v1.ModuleSpec.PermissionsEntry
	nil,                             // 21: common.v1.ComputeEnvelope.ParamsEntry
	nil,                             // 22: common.v1.ComputeEnvelope.SecurityEntry
	nil,                             // 23: common.v1.ComputeAssignment.MetadataEntry
	nil,                             // 24: common.v1.ComputeProgress.MetricsEntry
	nil,                             // 25: common.v1.ComputeResult.SummaryEntry
	nil,                             // 26: common.v1.ComputeFailure.DetailsEntry
	(*structpb.Struct)(nil),         // 27: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),   // 28: google.protobuf.Timestamp
}
var file_common_v1_compute_proto_depIdxs = []int32{
	27, // 0: common.v1.DataRef.inline_json:type_name -> google.protobuf.Struct
	13, // 1: common.v1.DataRef.annotations:type_name -> common.v1.DataRef.AnnotationsEntry
	14, // 2: common.v1.TensorSpec.quant:type_name -> common.v1.TensorSpec.Quantization
	15, // 3: common.v1.GPUDescriptor.limits:type_name -> common.v1.GPUDescriptor.LimitsEntry
	3,  // 4: common.v1.Capability.gpu:type_name -> common.v1.GPUDescriptor
	16, // 5: common.v1.Capability.attributes:type_name -> common.v1.Capability.AttributesEntry
	4,  // 6: common.v1.Requirements.min:type_name -> common.v1.Capability
	4,  // 7: common.v1.Requirements.preferred:type_name -> common.v1.Capability
	17, // 8: common.v1.Requirements.qos:type_name -> common.v1.Requirements.QosEntry
	18, // 9: common.v1.Requirements.locality:type_name -> common.v1.Requirements.LocalityEntry
	1,  // 10: common.v1.ModuleSpec.expected_inputs:type_name -> common.v1.TensorSpec
	1,  // 11: common.v1.ModuleSpec.expected_outputs:type_name -> common.v1.TensorSpec
	19, // 12: common.v1.ModuleSpec.params:type_name -> common.v1.ModuleSpec.ParamsEntry
	20, // 13: common.v1.ModuleSpec.permissions:type_name -> common.v1.ModuleSpec.PermissionsEntry
	6,  // 14: common.v1.ComputeEnvelope.module:type_name -> common.v1.ModuleSpec
	5,  // 15: common.v1.ComputeEnvelope.requirements:type_name -> common.v1.Requirements
	0,  // 16: common.v1.ComputeEnvelope.inputs:type_name -> common.v1.DataRef
	21, // 17: common.v1.ComputeEnvelope.params:type_name -> common.v1.ComputeEnvelope.ParamsEntry
	22, // 18: common.v1.ComputeEnvelope.security:type_name -> common.v1.ComputeEnvelope.SecurityEntry
	28, // 19: common.v1.ComputeEnvelope.not_before:type_name -> google.protobuf.Timestamp
	28, // 20: common.v1.ComputeEnvelope.deadline:type_name -> google.protobuf.Timestamp
	4,  // 21: common.v1.ComputeClaim.capabilities:type_name -> common.v1.Capability
	23, // 22: common.v1.ComputeAssignment.metadata:type_name -> common.v1.ComputeAssignment.MetadataEntry
	24, // 23: common.v1.ComputeProgress.metrics:type_name -> common.v1.ComputeProgress.MetricsEntry
	0,  // 24: common.v1.ComputeResult.outputs:type_name -> common.v1.DataRef
	25, // 25: common.v1.ComputeResult.summary:type_name -> common.v1.ComputeResult.SummaryEntry
	26, // 26: common.v1.ComputeFailure.details:type_name -> common.v1.ComputeFailure.DetailsEntry
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_common_v1_compute_proto_init() }
func file_common_v1_compute_proto_init() {
	if File_common_v1_compute_proto != nil {
		return
	}
	file_common_v1_compute_proto_msgTypes[0].OneofWrappers = []any{
		(*DataRef_InlineBytes)(nil),
		(*DataRef_InlineJson)(nil),
		(*DataRef_Uri)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_v1_compute_proto_rawDesc), len(file_common_v1_compute_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_compute_proto_goTypes,
		DependencyIndexes: file_common_v1_compute_proto_depIdxs,
		MessageInfos:      file_common_v1_compute_proto_msgTypes,
	}.Build()
	File_common_v1_compute_proto = out.File
	file_common_v1_compute_proto_goTypes = nil
	file_common_v1_compute_proto_depIdxs = nil
}
