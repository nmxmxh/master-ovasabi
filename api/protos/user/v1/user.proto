syntax = "proto3";

package user.v1;

import "google/protobuf/timestamp.proto";
import "common/v1/metadata.proto";

option go_package = "master-ovasabi/api/protos/user/v1;userv1";

// UserService handles user management, authentication, RBAC, and audit operations
service UserService {
  // --- User Management ---
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  rpc GetUserByUsername(GetUserByUsernameRequest) returns (GetUserByUsernameResponse) {}
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {}
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {}

  // --- Session Management ---
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {}
  rpc GetSession(GetSessionRequest) returns (GetSessionResponse) {}
  rpc RevokeSession(RevokeSessionRequest) returns (RevokeSessionResponse) {}
  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse) {}

  // --- RBAC & Permissions ---
  rpc AssignRole(AssignRoleRequest) returns (AssignRoleResponse) {}
  rpc RemoveRole(RemoveRoleRequest) returns (RemoveRoleResponse) {}
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {}
  rpc ListPermissions(ListPermissionsRequest) returns (ListPermissionsResponse) {}

  // --- Audit/Event Log ---
  rpc ListUserEvents(ListUserEventsRequest) returns (ListUserEventsResponse) {}
  rpc ListAuditLogs(ListAuditLogsRequest) returns (ListAuditLogsResponse) {}

  // --- SSO, MFA, SCIM Extensibility (placeholders for future expansion) ---
  rpc InitiateSSO(InitiateSSORequest) returns (InitiateSSOResponse) {}
  rpc InitiateMFA(InitiateMFARequest) returns (InitiateMFAResponse) {}
  rpc SyncSCIM(SyncSCIMRequest) returns (SyncSCIMResponse) {}

  // --- Legacy/Platform-specific ---
  rpc RegisterInterest(RegisterInterestRequest) returns (RegisterInterestResponse) {}
  rpc CreateReferral(CreateReferralRequest) returns (CreateReferralResponse) {}
}

// --- Core Entities ---

message User {
  string id = 1; // UUID
  string master_id = 2; // For analytics/unified queries
  string username = 3;
  string email = 4;
  string referral_code = 5;
  string referred_by = 6;
  string device_hash = 7;
  string location = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  string password_hash = 11;
  common.Metadata metadata = 12;
  UserProfile profile = 13;
  repeated string roles = 14;
  UserStatus status = 15;
  repeated string tags = 16;
  map<string, string> external_ids = 17;
  reserved 18 to 29;
}

message UserProfile {
  string first_name = 1;
  string last_name = 2;
  string phone_number = 3;
  string avatar_url = 4;
  string bio = 5;
  string timezone = 7;
  string language = 8;
  map<string, string> custom_fields = 9;
  reserved 10 to 19;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
  USER_STATUS_PENDING = 4;
}

// --- User Management Requests/Responses (existing, updated for UUID) ---
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  UserProfile profile = 4;
  repeated string roles = 5;
  common.Metadata metadata = 6;
}
message CreateUserResponse { User user = 1; }
message GetUserRequest { string user_id = 1; }
message GetUserResponse { User user = 1; }
message GetUserByUsernameRequest { string username = 1; }
message GetUserByUsernameResponse { User user = 1; }
message GetUserByEmailRequest {
  string email = 1;
}
message GetUserByEmailResponse {
  User user = 1;
}
message UpdateUserRequest {
  string user_id = 1;
  User user = 2;
  repeated string fields_to_update = 3;
}
message UpdateUserResponse { User user = 1; }
message DeleteUserRequest { string user_id = 1; bool hard_delete = 2; }
message DeleteUserResponse { bool success = 1; }
message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
  string sort_by = 3;
  bool sort_desc = 4;
  common.Metadata filters = 5;
  string search_query = 6;
  repeated string tags = 7;
  common.Metadata metadata = 8;
  reserved 9 to 19;
}
message ListUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 total_pages = 4;
}
message UpdatePasswordRequest {
  string user_id = 1;
  string current_password = 2;
  string new_password = 3;
}
message UpdatePasswordResponse { bool success = 1; int64 updated_at = 2; }
message UpdateProfileRequest {
  string user_id = 1;
  UserProfile profile = 2;
  repeated string fields_to_update = 3;
}
message UpdateProfileResponse { User user = 1; }

// --- Session Management ---
message CreateSessionRequest {
  string user_id = 1;
  string password = 2;
  string device_info = 3;
}
message CreateSessionResponse {
  Session session = 1;
}
message GetSessionRequest { string session_id = 1; }
message GetSessionResponse { Session session = 1; }
message RevokeSessionRequest { string session_id = 1; }
message RevokeSessionResponse { bool success = 1; }
message ListSessionsRequest { string user_id = 1; }
message ListSessionsResponse { repeated Session sessions = 1; }

message Session {
  string id = 1;
  string user_id = 2;
  string device_info = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp expires_at = 5;
  string refresh_token = 6;
  string access_token = 7;
  string ip_address = 8;
  common.Metadata metadata = 9;
  reserved 10 to 19;
}

// --- RBAC & Permissions ---
message AssignRoleRequest {
  string user_id = 1;
  string role = 2;
}
message AssignRoleResponse { bool success = 1; }
message RemoveRoleRequest {
  string user_id = 1;
  string role = 2;
}
message RemoveRoleResponse { bool success = 1; }
message ListRolesRequest { string user_id = 1; }
message ListRolesResponse { repeated string roles = 1; }
message ListPermissionsRequest { string user_id = 1; }
message ListPermissionsResponse { repeated string permissions = 1; }

// --- Audit/Event Log ---
message ListUserEventsRequest { string user_id = 1; int32 page = 2; int32 page_size = 3; }
message ListUserEventsResponse { repeated UserEvent events = 1; int32 total_count = 2; }
message ListAuditLogsRequest { int32 page = 1; int32 page_size = 2; }
message ListAuditLogsResponse { repeated AuditLog logs = 1; int32 total_count = 2; }

message UserEvent {
  string id = 1;
  string user_id = 2;
  string master_id = 3;
  string event_type = 4;
  string description = 5;
  google.protobuf.Timestamp occurred_at = 6;
  common.Metadata metadata = 7;
  map<string, string> payload = 8;
  reserved 9 to 19;
}

message AuditLog {
  string id = 1;
  string user_id = 2;
  string master_id = 3;
  string action = 4;
  string resource = 5;
  google.protobuf.Timestamp occurred_at = 6;
  common.Metadata metadata = 7;
  map<string, string> payload = 8;
  reserved 9 to 19;
}

// --- SSO, MFA, SCIM Extensibility (placeholders) ---
message InitiateSSORequest { string provider = 1; string redirect_uri = 2; }
message InitiateSSOResponse { string sso_url = 1; }
message InitiateMFARequest { string user_id = 1; string mfa_type = 2; }
message InitiateMFAResponse { bool initiated = 1; string challenge_id = 2; }
message SyncSCIMRequest { string scim_payload = 1; }
message SyncSCIMResponse { bool success = 1; }

// --- Legacy/Platform-specific ---
message RegisterInterestRequest { string email = 1; string device_hash = 2; string location = 3; }
message RegisterInterestResponse { User user = 1; }
message CreateReferralRequest { string user_id = 1; string campaign_slug = 2; string device_hash = 3; }
message CreateReferralResponse { string referral_code = 1; bool success = 2; } 