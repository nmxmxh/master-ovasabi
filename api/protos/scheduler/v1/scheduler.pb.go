// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: scheduler/v1/scheduler.proto

package scheduler

import (
	v1 "github.com/nmxmxh/master-ovasabi/api/protos/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TriggerType int32

const (
	TriggerType_TRIGGER_TYPE_UNSPECIFIED TriggerType = 0
	TriggerType_TRIGGER_TYPE_CRON        TriggerType = 1
	TriggerType_TRIGGER_TYPE_INTERVAL    TriggerType = 2
	TriggerType_TRIGGER_TYPE_CDC         TriggerType = 3
)

// Enum value maps for TriggerType.
var (
	TriggerType_name = map[int32]string{
		0: "TRIGGER_TYPE_UNSPECIFIED",
		1: "TRIGGER_TYPE_CRON",
		2: "TRIGGER_TYPE_INTERVAL",
		3: "TRIGGER_TYPE_CDC",
	}
	TriggerType_value = map[string]int32{
		"TRIGGER_TYPE_UNSPECIFIED": 0,
		"TRIGGER_TYPE_CRON":        1,
		"TRIGGER_TYPE_INTERVAL":    2,
		"TRIGGER_TYPE_CDC":         3,
	}
)

func (x TriggerType) Enum() *TriggerType {
	p := new(TriggerType)
	*p = x
	return p
}

func (x TriggerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerType) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduler_v1_scheduler_proto_enumTypes[0].Descriptor()
}

func (TriggerType) Type() protoreflect.EnumType {
	return &file_scheduler_v1_scheduler_proto_enumTypes[0]
}

func (x TriggerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerType.Descriptor instead.
func (TriggerType) EnumDescriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{0}
}

// JobType classifies the type of job for better filtering and handling.
type JobType int32

const (
	JobType_JOB_TYPE_UNSPECIFIED JobType = 0
	JobType_JOB_TYPE_MAINTENANCE JobType = 1
	JobType_JOB_TYPE_CLEANUP     JobType = 2
	JobType_JOB_TYPE_NOTIFY      JobType = 3
	JobType_JOB_TYPE_CUSTOM      JobType = 4
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0: "JOB_TYPE_UNSPECIFIED",
		1: "JOB_TYPE_MAINTENANCE",
		2: "JOB_TYPE_CLEANUP",
		3: "JOB_TYPE_NOTIFY",
		4: "JOB_TYPE_CUSTOM",
	}
	JobType_value = map[string]int32{
		"JOB_TYPE_UNSPECIFIED": 0,
		"JOB_TYPE_MAINTENANCE": 1,
		"JOB_TYPE_CLEANUP":     2,
		"JOB_TYPE_NOTIFY":      3,
		"JOB_TYPE_CUSTOM":      4,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduler_v1_scheduler_proto_enumTypes[1].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_scheduler_v1_scheduler_proto_enumTypes[1]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{1}
}

// JobStatus provides canonical job status values.
type JobStatus int32

const (
	JobStatus_JOB_STATUS_UNSPECIFIED JobStatus = 0
	JobStatus_JOB_STATUS_ACTIVE      JobStatus = 1
	JobStatus_JOB_STATUS_PAUSED      JobStatus = 2
	JobStatus_JOB_STATUS_DISABLED    JobStatus = 3
	JobStatus_JOB_STATUS_COMPLETED   JobStatus = 4
	JobStatus_JOB_STATUS_FAILED      JobStatus = 5
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JOB_STATUS_UNSPECIFIED",
		1: "JOB_STATUS_ACTIVE",
		2: "JOB_STATUS_PAUSED",
		3: "JOB_STATUS_DISABLED",
		4: "JOB_STATUS_COMPLETED",
		5: "JOB_STATUS_FAILED",
	}
	JobStatus_value = map[string]int32{
		"JOB_STATUS_UNSPECIFIED": 0,
		"JOB_STATUS_ACTIVE":      1,
		"JOB_STATUS_PAUSED":      2,
		"JOB_STATUS_DISABLED":    3,
		"JOB_STATUS_COMPLETED":   4,
		"JOB_STATUS_FAILED":      5,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scheduler_v1_scheduler_proto_enumTypes[2].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_scheduler_v1_scheduler_proto_enumTypes[2]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{2}
}

// RetryPolicy defines how failed jobs are retried.
type RetryPolicy struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaxAttempts    int32                  `protobuf:"varint,1,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`          // Maximum number of retry attempts
	BackoffSeconds int64                  `protobuf:"varint,2,opt,name=backoff_seconds,json=backoffSeconds,proto3" json:"backoff_seconds,omitempty"` // Backoff between retries in seconds
	Exponential    bool                   `protobuf:"varint,3,opt,name=exponential,proto3" json:"exponential,omitempty"`                             // Use exponential backoff if true
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RetryPolicy) Reset() {
	*x = RetryPolicy{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryPolicy) ProtoMessage() {}

func (x *RetryPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryPolicy.ProtoReflect.Descriptor instead.
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *RetryPolicy) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *RetryPolicy) GetBackoffSeconds() int64 {
	if x != nil {
		return x.BackoffSeconds
	}
	return 0
}

func (x *RetryPolicy) GetExponential() bool {
	if x != nil {
		return x.Exponential
	}
	return false
}

// JobHistory tracks past runs for a job (optional, for future use).
type JobHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runs          []*JobRun              `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobHistory) Reset() {
	*x = JobHistory{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobHistory) ProtoMessage() {}

func (x *JobHistory) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobHistory.ProtoReflect.Descriptor instead.
func (*JobHistory) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *JobHistory) GetRuns() []*JobRun {
	if x != nil {
		return x.Runs
	}
	return nil
}

// CDCTrigger defines a change data capture trigger for event-based jobs.
type CDCTrigger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`                          // Table to watch
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // insert, update, delete
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`                        // e.g., JSONPath or SQL WHERE
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDCTrigger) Reset() {
	*x = CDCTrigger{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDCTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDCTrigger) ProtoMessage() {}

func (x *CDCTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDCTrigger.ProtoReflect.Descriptor instead.
func (*CDCTrigger) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *CDCTrigger) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *CDCTrigger) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *CDCTrigger) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Job represents a scheduled or event-driven job.
type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                    // Unique job ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                // Human-readable job name
	Schedule      string                 `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`                                                                        // Cron or interval expression
	Payload       string                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`                                                                          // Opaque payload for the job handler
	Status        JobStatus              `protobuf:"varint,5,opt,name=status,proto3,enum=scheduler.v1.JobStatus" json:"status,omitempty"`                                               // Canonical job status
	Metadata      *v1.Metadata           `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                                        // Extensible metadata
	LastRunId     string                 `protobuf:"bytes,7,opt,name=last_run_id,json=lastRunId,proto3" json:"last_run_id,omitempty"`                                                   // Last run ID
	CreatedAt     int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                    // Creation timestamp (unix seconds)
	UpdatedAt     int64                  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                                    // Last update timestamp (unix seconds)
	TriggerType   TriggerType            `protobuf:"varint,10,opt,name=trigger_type,json=triggerType,proto3,enum=scheduler.v1.TriggerType" json:"trigger_type,omitempty"`               // How the job is triggered
	CdcTrigger    *CDCTrigger            `protobuf:"bytes,11,opt,name=cdc_trigger,json=cdcTrigger,proto3" json:"cdc_trigger,omitempty"`                                                 // CDC trigger details (if event-based)
	JobType       JobType                `protobuf:"varint,12,opt,name=job_type,json=jobType,proto3,enum=scheduler.v1.JobType" json:"job_type,omitempty"`                               // Classification of the job
	RetryPolicy   *RetryPolicy           `protobuf:"bytes,13,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`                                              // Retry policy for failed jobs
	Owner         string                 `protobuf:"bytes,14,opt,name=owner,proto3" json:"owner,omitempty"`                                                                             // User or service that owns the job
	NextRunTime   int64                  `protobuf:"varint,15,opt,name=next_run_time,json=nextRunTime,proto3" json:"next_run_time,omitempty"`                                           // Next scheduled run (unix seconds)
	Labels        map[string]string      `protobuf:"bytes,16,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Arbitrary labels for filtering
	History       *JobHistory            `protobuf:"bytes,17,opt,name=history,proto3" json:"history,omitempty"`                                                                         // (Optional) History of job runs
	MasterUuid    string                 `protobuf:"bytes,18,opt,name=master_uuid,json=masterUuid,proto3" json:"master_uuid,omitempty"`                                                 // Master UUID
	CampaignId    int64                  `protobuf:"varint,19,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`                                                // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *Job) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Job) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JOB_STATUS_UNSPECIFIED
}

func (x *Job) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Job) GetLastRunId() string {
	if x != nil {
		return x.LastRunId
	}
	return ""
}

func (x *Job) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Job) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Job) GetTriggerType() TriggerType {
	if x != nil {
		return x.TriggerType
	}
	return TriggerType_TRIGGER_TYPE_UNSPECIFIED
}

func (x *Job) GetCdcTrigger() *CDCTrigger {
	if x != nil {
		return x.CdcTrigger
	}
	return nil
}

func (x *Job) GetJobType() JobType {
	if x != nil {
		return x.JobType
	}
	return JobType_JOB_TYPE_UNSPECIFIED
}

func (x *Job) GetRetryPolicy() *RetryPolicy {
	if x != nil {
		return x.RetryPolicy
	}
	return nil
}

func (x *Job) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Job) GetNextRunTime() int64 {
	if x != nil {
		return x.NextRunTime
	}
	return 0
}

func (x *Job) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Job) GetHistory() *JobHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *Job) GetMasterUuid() string {
	if x != nil {
		return x.MasterUuid
	}
	return ""
}

func (x *Job) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type CreateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	CampaignId    int64                  `protobuf:"varint,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *CreateJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *CreateJobRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type CreateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobResponse) Reset() {
	*x = CreateJobResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobResponse) ProtoMessage() {}

func (x *CreateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobResponse.ProtoReflect.Descriptor instead.
func (*CreateJobResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{5}
}

func (x *CreateJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type UpdateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	CampaignId    int64                  `protobuf:"varint,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobRequest) Reset() {
	*x = UpdateJobRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobRequest) ProtoMessage() {}

func (x *UpdateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *UpdateJobRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type UpdateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobResponse) Reset() {
	*x = UpdateJobResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobResponse) ProtoMessage() {}

func (x *UpdateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type DeleteJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	CampaignId    int64                  `protobuf:"varint,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobRequest) Reset() {
	*x = DeleteJobRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRequest) ProtoMessage() {}

func (x *DeleteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *DeleteJobRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type DeleteJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobResponse) Reset() {
	*x = DeleteJobResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobResponse) ProtoMessage() {}

func (x *DeleteJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CampaignId    int64                  `protobuf:"varint,4,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{10}
}

func (x *ListJobsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListJobsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListJobsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListJobsRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type ListJobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*Job                 `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	TotalPages    int32                  `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{11}
}

func (x *ListJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListJobsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListJobsResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type GetJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	CampaignId    int64                  `protobuf:"varint,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{12}
}

func (x *GetJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetJobRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type GetJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Job           *Job                   `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobResponse) Reset() {
	*x = GetJobResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobResponse) ProtoMessage() {}

func (x *GetJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobResponse.ProtoReflect.Descriptor instead.
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{13}
}

func (x *GetJobResponse) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type RunJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	CampaignId    int64                  `protobuf:"varint,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunJobRequest) Reset() {
	*x = RunJobRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobRequest) ProtoMessage() {}

func (x *RunJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobRequest.ProtoReflect.Descriptor instead.
func (*RunJobRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{14}
}

func (x *RunJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *RunJobRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type RunJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Run           *JobRun                `protobuf:"bytes,1,opt,name=run,proto3" json:"run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunJobResponse) Reset() {
	*x = RunJobResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobResponse) ProtoMessage() {}

func (x *RunJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobResponse.ProtoReflect.Descriptor instead.
func (*RunJobResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{15}
}

func (x *RunJobResponse) GetRun() *JobRun {
	if x != nil {
		return x.Run
	}
	return nil
}

type ListJobRunsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	CampaignId    int64                  `protobuf:"varint,4,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobRunsRequest) Reset() {
	*x = ListJobRunsRequest{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobRunsRequest) ProtoMessage() {}

func (x *ListJobRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobRunsRequest.ProtoReflect.Descriptor instead.
func (*ListJobRunsRequest) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{16}
}

func (x *ListJobRunsRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ListJobRunsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListJobRunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListJobRunsRequest) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

type ListJobRunsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runs          []*JobRun              `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	TotalPages    int32                  `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobRunsResponse) Reset() {
	*x = ListJobRunsResponse{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobRunsResponse) ProtoMessage() {}

func (x *ListJobRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobRunsResponse.ProtoReflect.Descriptor instead.
func (*ListJobRunsResponse) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{17}
}

func (x *ListJobRunsResponse) GetRuns() []*JobRun {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *ListJobRunsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListJobRunsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListJobRunsResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type JobRun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	StartedAt     int64                  `protobuf:"varint,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt    int64                  `protobuf:"varint,4,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // success, failed, running
	Result        string                 `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	Error         string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	Metadata      *v1.Metadata           `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MasterUuid    string                 `protobuf:"bytes,9,opt,name=master_uuid,json=masterUuid,proto3" json:"master_uuid,omitempty"`   // Master UUID
	CampaignId    int64                  `protobuf:"varint,10,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"` // campaign/tenant context
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobRun) Reset() {
	*x = JobRun{}
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRun) ProtoMessage() {}

func (x *JobRun) ProtoReflect() protoreflect.Message {
	mi := &file_scheduler_v1_scheduler_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRun.ProtoReflect.Descriptor instead.
func (*JobRun) Descriptor() ([]byte, []int) {
	return file_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{18}
}

func (x *JobRun) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobRun) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobRun) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *JobRun) GetFinishedAt() int64 {
	if x != nil {
		return x.FinishedAt
	}
	return 0
}

func (x *JobRun) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobRun) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *JobRun) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *JobRun) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *JobRun) GetMasterUuid() string {
	if x != nil {
		return x.MasterUuid
	}
	return ""
}

func (x *JobRun) GetCampaignId() int64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

var File_scheduler_v1_scheduler_proto protoreflect.FileDescriptor

const file_scheduler_v1_scheduler_proto_rawDesc = "" +
	"\n" +
	"\x1cscheduler/v1/scheduler.proto\x12\fscheduler.v1\x1a\x18common/v1/metadata.proto\"{\n" +
	"\vRetryPolicy\x12!\n" +
	"\fmax_attempts\x18\x01 \x01(\x05R\vmaxAttempts\x12'\n" +
	"\x0fbackoff_seconds\x18\x02 \x01(\x03R\x0ebackoffSeconds\x12 \n" +
	"\vexponential\x18\x03 \x01(\bR\vexponential\"6\n" +
	"\n" +
	"JobHistory\x12(\n" +
	"\x04runs\x18\x01 \x03(\v2\x14.scheduler.v1.JobRunR\x04runs\"Y\n" +
	"\n" +
	"CDCTrigger\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\"\xa7\x06\n" +
	"\x03Job\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bschedule\x18\x03 \x01(\tR\bschedule\x12\x18\n" +
	"\apayload\x18\x04 \x01(\tR\apayload\x12/\n" +
	"\x06status\x18\x05 \x01(\x0e2\x17.scheduler.v1.JobStatusR\x06status\x12,\n" +
	"\bmetadata\x18\x06 \x01(\v2\x10.common.MetadataR\bmetadata\x12\x1e\n" +
	"\vlast_run_id\x18\a \x01(\tR\tlastRunId\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\x03R\tupdatedAt\x12<\n" +
	"\ftrigger_type\x18\n" +
	" \x01(\x0e2\x19.scheduler.v1.TriggerTypeR\vtriggerType\x129\n" +
	"\vcdc_trigger\x18\v \x01(\v2\x18.scheduler.v1.CDCTriggerR\n" +
	"cdcTrigger\x120\n" +
	"\bjob_type\x18\f \x01(\x0e2\x15.scheduler.v1.JobTypeR\ajobType\x12<\n" +
	"\fretry_policy\x18\r \x01(\v2\x19.scheduler.v1.RetryPolicyR\vretryPolicy\x12\x14\n" +
	"\x05owner\x18\x0e \x01(\tR\x05owner\x12\"\n" +
	"\rnext_run_time\x18\x0f \x01(\x03R\vnextRunTime\x125\n" +
	"\x06labels\x18\x10 \x03(\v2\x1d.scheduler.v1.Job.LabelsEntryR\x06labels\x122\n" +
	"\ahistory\x18\x11 \x01(\v2\x18.scheduler.v1.JobHistoryR\ahistory\x12\x1f\n" +
	"\vmaster_uuid\x18\x12 \x01(\tR\n" +
	"masterUuid\x12\x1f\n" +
	"\vcampaign_id\x18\x13 \x01(\x03R\n" +
	"campaignId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"X\n" +
	"\x10CreateJobRequest\x12#\n" +
	"\x03job\x18\x01 \x01(\v2\x11.scheduler.v1.JobR\x03job\x12\x1f\n" +
	"\vcampaign_id\x18\x02 \x01(\x03R\n" +
	"campaignId\"8\n" +
	"\x11CreateJobResponse\x12#\n" +
	"\x03job\x18\x01 \x01(\v2\x11.scheduler.v1.JobR\x03job\"X\n" +
	"\x10UpdateJobRequest\x12#\n" +
	"\x03job\x18\x01 \x01(\v2\x11.scheduler.v1.JobR\x03job\x12\x1f\n" +
	"\vcampaign_id\x18\x02 \x01(\x03R\n" +
	"campaignId\"8\n" +
	"\x11UpdateJobResponse\x12#\n" +
	"\x03job\x18\x01 \x01(\v2\x11.scheduler.v1.JobR\x03job\"J\n" +
	"\x10DeleteJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1f\n" +
	"\vcampaign_id\x18\x02 \x01(\x03R\n" +
	"campaignId\"-\n" +
	"\x11DeleteJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"{\n" +
	"\x0fListJobsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1f\n" +
	"\vcampaign_id\x18\x04 \x01(\x03R\n" +
	"campaignId\"\x8f\x01\n" +
	"\x10ListJobsResponse\x12%\n" +
	"\x04jobs\x18\x01 \x03(\v2\x11.scheduler.v1.JobR\x04jobs\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\"G\n" +
	"\rGetJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1f\n" +
	"\vcampaign_id\x18\x02 \x01(\x03R\n" +
	"campaignId\"5\n" +
	"\x0eGetJobResponse\x12#\n" +
	"\x03job\x18\x01 \x01(\v2\x11.scheduler.v1.JobR\x03job\"G\n" +
	"\rRunJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1f\n" +
	"\vcampaign_id\x18\x02 \x01(\x03R\n" +
	"campaignId\"8\n" +
	"\x0eRunJobResponse\x12&\n" +
	"\x03run\x18\x01 \x01(\v2\x14.scheduler.v1.JobRunR\x03run\"}\n" +
	"\x12ListJobRunsRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vcampaign_id\x18\x04 \x01(\x03R\n" +
	"campaignId\"\x95\x01\n" +
	"\x13ListJobRunsResponse\x12(\n" +
	"\x04runs\x18\x01 \x03(\v2\x14.scheduler.v1.JobRunR\x04runs\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\"\xa5\x02\n" +
	"\x06JobRun\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12\x1d\n" +
	"\n" +
	"started_at\x18\x03 \x01(\x03R\tstartedAt\x12\x1f\n" +
	"\vfinished_at\x18\x04 \x01(\x03R\n" +
	"finishedAt\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x16\n" +
	"\x06result\x18\x06 \x01(\tR\x06result\x12\x14\n" +
	"\x05error\x18\a \x01(\tR\x05error\x12,\n" +
	"\bmetadata\x18\b \x01(\v2\x10.common.MetadataR\bmetadata\x12\x1f\n" +
	"\vmaster_uuid\x18\t \x01(\tR\n" +
	"masterUuid\x12\x1f\n" +
	"\vcampaign_id\x18\n" +
	" \x01(\x03R\n" +
	"campaignId*s\n" +
	"\vTriggerType\x12\x1c\n" +
	"\x18TRIGGER_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TRIGGER_TYPE_CRON\x10\x01\x12\x19\n" +
	"\x15TRIGGER_TYPE_INTERVAL\x10\x02\x12\x14\n" +
	"\x10TRIGGER_TYPE_CDC\x10\x03*}\n" +
	"\aJobType\x12\x18\n" +
	"\x14JOB_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14JOB_TYPE_MAINTENANCE\x10\x01\x12\x14\n" +
	"\x10JOB_TYPE_CLEANUP\x10\x02\x12\x13\n" +
	"\x0fJOB_TYPE_NOTIFY\x10\x03\x12\x13\n" +
	"\x0fJOB_TYPE_CUSTOM\x10\x04*\x9f\x01\n" +
	"\tJobStatus\x12\x1a\n" +
	"\x16JOB_STATUS_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11JOB_STATUS_ACTIVE\x10\x01\x12\x15\n" +
	"\x11JOB_STATUS_PAUSED\x10\x02\x12\x17\n" +
	"\x13JOB_STATUS_DISABLED\x10\x03\x12\x18\n" +
	"\x14JOB_STATUS_COMPLETED\x10\x04\x12\x15\n" +
	"\x11JOB_STATUS_FAILED\x10\x052\xa5\x04\n" +
	"\x10SchedulerService\x12L\n" +
	"\tCreateJob\x12\x1e.scheduler.v1.CreateJobRequest\x1a\x1f.scheduler.v1.CreateJobResponse\x12L\n" +
	"\tUpdateJob\x12\x1e.scheduler.v1.UpdateJobRequest\x1a\x1f.scheduler.v1.UpdateJobResponse\x12L\n" +
	"\tDeleteJob\x12\x1e.scheduler.v1.DeleteJobRequest\x1a\x1f.scheduler.v1.DeleteJobResponse\x12I\n" +
	"\bListJobs\x12\x1d.scheduler.v1.ListJobsRequest\x1a\x1e.scheduler.v1.ListJobsResponse\x12C\n" +
	"\x06GetJob\x12\x1b.scheduler.v1.GetJobRequest\x1a\x1c.scheduler.v1.GetJobResponse\x12C\n" +
	"\x06RunJob\x12\x1b.scheduler.v1.RunJobRequest\x1a\x1c.scheduler.v1.RunJobResponse\x12R\n" +
	"\vListJobRuns\x12 .scheduler.v1.ListJobRunsRequest\x1a!.scheduler.v1.ListJobRunsResponseB7Z5github.com/nmxmxh/master-ovasabi/api/protos/schedulerb\x06proto3"

var (
	file_scheduler_v1_scheduler_proto_rawDescOnce sync.Once
	file_scheduler_v1_scheduler_proto_rawDescData []byte
)

func file_scheduler_v1_scheduler_proto_rawDescGZIP() []byte {
	file_scheduler_v1_scheduler_proto_rawDescOnce.Do(func() {
		file_scheduler_v1_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scheduler_v1_scheduler_proto_rawDesc), len(file_scheduler_v1_scheduler_proto_rawDesc)))
	})
	return file_scheduler_v1_scheduler_proto_rawDescData
}

var file_scheduler_v1_scheduler_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_scheduler_v1_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_scheduler_v1_scheduler_proto_goTypes = []any{
	(TriggerType)(0),            // 0: scheduler.v1.TriggerType
	(JobType)(0),                // 1: scheduler.v1.JobType
	(JobStatus)(0),              // 2: scheduler.v1.JobStatus
	(*RetryPolicy)(nil),         // 3: scheduler.v1.RetryPolicy
	(*JobHistory)(nil),          // 4: scheduler.v1.JobHistory
	(*CDCTrigger)(nil),          // 5: scheduler.v1.CDCTrigger
	(*Job)(nil),                 // 6: scheduler.v1.Job
	(*CreateJobRequest)(nil),    // 7: scheduler.v1.CreateJobRequest
	(*CreateJobResponse)(nil),   // 8: scheduler.v1.CreateJobResponse
	(*UpdateJobRequest)(nil),    // 9: scheduler.v1.UpdateJobRequest
	(*UpdateJobResponse)(nil),   // 10: scheduler.v1.UpdateJobResponse
	(*DeleteJobRequest)(nil),    // 11: scheduler.v1.DeleteJobRequest
	(*DeleteJobResponse)(nil),   // 12: scheduler.v1.DeleteJobResponse
	(*ListJobsRequest)(nil),     // 13: scheduler.v1.ListJobsRequest
	(*ListJobsResponse)(nil),    // 14: scheduler.v1.ListJobsResponse
	(*GetJobRequest)(nil),       // 15: scheduler.v1.GetJobRequest
	(*GetJobResponse)(nil),      // 16: scheduler.v1.GetJobResponse
	(*RunJobRequest)(nil),       // 17: scheduler.v1.RunJobRequest
	(*RunJobResponse)(nil),      // 18: scheduler.v1.RunJobResponse
	(*ListJobRunsRequest)(nil),  // 19: scheduler.v1.ListJobRunsRequest
	(*ListJobRunsResponse)(nil), // 20: scheduler.v1.ListJobRunsResponse
	(*JobRun)(nil),              // 21: scheduler.v1.JobRun
	nil,                         // 22: scheduler.v1.Job.LabelsEntry
	(*v1.Metadata)(nil),         // 23: common.Metadata
}
var file_scheduler_v1_scheduler_proto_depIdxs = []int32{
	21, // 0: scheduler.v1.JobHistory.runs:type_name -> scheduler.v1.JobRun
	2,  // 1: scheduler.v1.Job.status:type_name -> scheduler.v1.JobStatus
	23, // 2: scheduler.v1.Job.metadata:type_name -> common.Metadata
	0,  // 3: scheduler.v1.Job.trigger_type:type_name -> scheduler.v1.TriggerType
	5,  // 4: scheduler.v1.Job.cdc_trigger:type_name -> scheduler.v1.CDCTrigger
	1,  // 5: scheduler.v1.Job.job_type:type_name -> scheduler.v1.JobType
	3,  // 6: scheduler.v1.Job.retry_policy:type_name -> scheduler.v1.RetryPolicy
	22, // 7: scheduler.v1.Job.labels:type_name -> scheduler.v1.Job.LabelsEntry
	4,  // 8: scheduler.v1.Job.history:type_name -> scheduler.v1.JobHistory
	6,  // 9: scheduler.v1.CreateJobRequest.job:type_name -> scheduler.v1.Job
	6,  // 10: scheduler.v1.CreateJobResponse.job:type_name -> scheduler.v1.Job
	6,  // 11: scheduler.v1.UpdateJobRequest.job:type_name -> scheduler.v1.Job
	6,  // 12: scheduler.v1.UpdateJobResponse.job:type_name -> scheduler.v1.Job
	6,  // 13: scheduler.v1.ListJobsResponse.jobs:type_name -> scheduler.v1.Job
	6,  // 14: scheduler.v1.GetJobResponse.job:type_name -> scheduler.v1.Job
	21, // 15: scheduler.v1.RunJobResponse.run:type_name -> scheduler.v1.JobRun
	21, // 16: scheduler.v1.ListJobRunsResponse.runs:type_name -> scheduler.v1.JobRun
	23, // 17: scheduler.v1.JobRun.metadata:type_name -> common.Metadata
	7,  // 18: scheduler.v1.SchedulerService.CreateJob:input_type -> scheduler.v1.CreateJobRequest
	9,  // 19: scheduler.v1.SchedulerService.UpdateJob:input_type -> scheduler.v1.UpdateJobRequest
	11, // 20: scheduler.v1.SchedulerService.DeleteJob:input_type -> scheduler.v1.DeleteJobRequest
	13, // 21: scheduler.v1.SchedulerService.ListJobs:input_type -> scheduler.v1.ListJobsRequest
	15, // 22: scheduler.v1.SchedulerService.GetJob:input_type -> scheduler.v1.GetJobRequest
	17, // 23: scheduler.v1.SchedulerService.RunJob:input_type -> scheduler.v1.RunJobRequest
	19, // 24: scheduler.v1.SchedulerService.ListJobRuns:input_type -> scheduler.v1.ListJobRunsRequest
	8,  // 25: scheduler.v1.SchedulerService.CreateJob:output_type -> scheduler.v1.CreateJobResponse
	10, // 26: scheduler.v1.SchedulerService.UpdateJob:output_type -> scheduler.v1.UpdateJobResponse
	12, // 27: scheduler.v1.SchedulerService.DeleteJob:output_type -> scheduler.v1.DeleteJobResponse
	14, // 28: scheduler.v1.SchedulerService.ListJobs:output_type -> scheduler.v1.ListJobsResponse
	16, // 29: scheduler.v1.SchedulerService.GetJob:output_type -> scheduler.v1.GetJobResponse
	18, // 30: scheduler.v1.SchedulerService.RunJob:output_type -> scheduler.v1.RunJobResponse
	20, // 31: scheduler.v1.SchedulerService.ListJobRuns:output_type -> scheduler.v1.ListJobRunsResponse
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_scheduler_v1_scheduler_proto_init() }
func file_scheduler_v1_scheduler_proto_init() {
	if File_scheduler_v1_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scheduler_v1_scheduler_proto_rawDesc), len(file_scheduler_v1_scheduler_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scheduler_v1_scheduler_proto_goTypes,
		DependencyIndexes: file_scheduler_v1_scheduler_proto_depIdxs,
		EnumInfos:         file_scheduler_v1_scheduler_proto_enumTypes,
		MessageInfos:      file_scheduler_v1_scheduler_proto_msgTypes,
	}.Build()
	File_scheduler_v1_scheduler_proto = out.File
	file_scheduler_v1_scheduler_proto_goTypes = nil
	file_scheduler_v1_scheduler_proto_depIdxs = nil
}
